{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.1.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\n\n// Load your modules here, e.g.:\nimport axios from 'axios';\nimport objects from './lib/object_definition';\nimport { replaceFunktion } from './lib/replaceFunktion';\n\n//rest API Obj\nconst commandObjects = objects.object_command_definitions;\nconst infoObjects = objects.object_info_definitions;\n\n//MQTT Obj\nconst batteryObjects = objects.object_mqttBattery_definitions;\nconst lightObjects = objects.object_mqttLight_definitions;\nconst magneticFieldObjects = objects.object_mqttMagneticField_definitions;\nconst pressureObjects = objects.object_mqttPressure_definitions;\nconst temperatureObjects = objects.object_mqttTemperature_definitions;\nconst motionObjects = objects.object_mqttMotion_definitions;\nconst faceObjects = objects.object_mqttFace_definitions;\nconst qrcodeObjects = objects.object_mqttQrcode_definitions;\n\nlet requestTimeout: NodeJS.Timeout | null = null;\nlet interval = 30;\nlet mqttEnabled = false;\nlet mqttInstance: string | null = null;\nconst mqttPath: string[] = [];\nlet mqttObj: {\n\tbattery?: any;\n\tlight?: any;\n\tmotion?: any;\n\tface?: any;\n\tqrcode?: any;\n\tmagneticField?: any;\n\tpressure?: any;\n\ttemperature?: any;\n}[] = [];\nconst ip: string[] = [];\nconst device_ip: string[] = [];\nconst port: string[] = [];\nconst tabletName: string[] = [];\nconst requestUrl: string[] = [];\nconst sendUrl: string[] = [];\nconst logMessage: boolean[] = [];\nconst deviceEnabled: boolean[] = [];\nconst logMessageTimer: NodeJS.Timeout[] = [];\nconst folder: string[] = [`command`];\nconst commandRequestTimeout: NodeJS.Timeout[] = [];\nconst commandStates: string[] = [`clearCache`, `relaunch`, `reload`, `wake`, `camera`, `brightness`, `volume`, `url`, `urlAudio`, `speak`, `eval`];\n\nclass Wallpanel extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'wallpanel',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Reset the connection indicator during startup\n\t\tthis.setState('info.connection', false, true);\n\n\t\t// Initialize your adapter here\n\t\tawait this.initialization();\n\t\tawait this.request();\n\t}\n\n\tasync initialization(): Promise<void> {\n\t\ttry {\n\t\t\tthis.log.debug(`prepare adapter for initialization`);\n\t\t\t// polling min 10 sec.\n\t\t\tinterval = this.config.interval * 1000;\n\t\t\tif (interval < 10000) {\n\t\t\t\tinterval = 10000;\n\t\t\t}\n\t\t\tthis.log.debug(`Adapter config for interval readout --> ${interval} ms`);\n\n\t\t\t// ip and port\n\t\t\tconst devices = this.config.devices;\n\t\t\tif ((!devices && devices['length'] !== 0) || (devices !== [] && devices['length'] !== 0)) {\n\t\t\t\tfor (const i in devices) {\n\t\t\t\t\tdevice_ip[i] = devices[i]['ip'];\n\t\t\t\t\tport[i] = devices[i]['port'];\n\t\t\t\t\tdeviceEnabled[i] = devices[i]['enabled'];\n\t\t\t\t\tmqttEnabled = JSON.parse(this.config['enabledMqtt']);\n\t\t\t\t\tmqttInstance = this.config['mqttInstance'];\n\t\t\t\t\tmqttPath[i] = `${mqttInstance}.${devices[i]['baseTopic'].replace('/', '.')}`;\n\t\t\t\t\tconst Name = devices[i]['name'];\n\n\t\t\t\t\tthis.log.debug(`initialization Ip: ${ip[i]}`);\n\t\t\t\t\tthis.log.debug(`initialization port: ${port[i]}`);\n\t\t\t\t\tthis.log.debug(`initialization deviceEnabled: ${deviceEnabled[i]}`);\n\t\t\t\t\tthis.log.debug(`initialization tabletName: ${Name}`);\n\n\t\t\t\t\tfor (const mqttPathKey in mqttPath) {\n\t\t\t\t\t\tthis.subscribeForeignStates(`${mqttPath[mqttPathKey]}.sensor.motion`);\n\t\t\t\t\t}\n\t\t\t\t\tthis.log.debug(`Check whether the IP address is available for the ${Name}`);\n\t\t\t\t\tdeviceEnabled[i] = device_ip[i] !== '' && deviceEnabled[i];\n\t\t\t\t\tif (device_ip[i] === '') this.log.warn(`${Name} has no ip address device is not queried`);\n\n\t\t\t\t\tif (device_ip[i] !== undefined || device_ip[i] !== '') {\n\t\t\t\t\t\tconst ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/;\n\t\t\t\t\t\tif (device_ip[i].match(ipformat)) {\n\t\t\t\t\t\t\t// valid\n\t\t\t\t\t\t\tip[i] = device_ip[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// invalid\n\t\t\t\t\t\t\tthis.log.warn('No Permitted Ip Address');\n\t\t\t\t\t\t\tdeviceEnabled[i] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trequestUrl[i] = `http://${ip[i]}:${port[i]}/api/state`;\n\t\t\t\t\tsendUrl[i] = `http://${ip[i]}:${port[i]}/api/command`;\n\n\t\t\t\t\tthis.log.debug(`initialization requestUrl: ${requestUrl[i]}`);\n\t\t\t\t\tthis.log.debug(`initialization sendUrl: ${sendUrl[i]}`);\n\n\t\t\t\t\tthis.log.debug(`it is checked whether the name of the device is entered`);\n\t\t\t\t\t// Prepare tablet name\n\t\t\t\t\tif (Name !== '') {\n\t\t\t\t\t\tthis.log.debug(`the name of the device is entered and is used --> ${Name}`);\n\t\t\t\t\t\ttabletName[i] = <string>await replaceFunktion(Name);\n\t\t\t\t\t} else if (deviceEnabled[i]) {\n\t\t\t\t\t\tthis.log.debug(`The name of the device is not entered; the IP address is used for the name --> ${ip[i]}`);\n\t\t\t\t\t\ttabletName[i] = <string>await replaceFunktion(ip[i]);\n\t\t\t\t\t}\n\t\t\t\t\tthis.log.debug(`Tablet name is being prepared: ${tabletName[i]}`);\n\t\t\t\t}\n\n\t\t\t\tthis.setState('info.connection', true, true);\n\t\t\t\tthis.log.debug(`Adapter has been fully initialized`);\n\t\t\t} else {\n\t\t\t\tdeviceEnabled[1] = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState('info.connection', false, true);\n\t\t\tthis.log.error(`initialization has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync request(): Promise<void> {\n\t\ttry {\n\t\t\tif (requestTimeout) clearTimeout(requestTimeout);\n\t\t\tif ((!requestUrl && requestUrl['length'] !== 0) || (requestUrl !== [] && requestUrl['length'] !== 0)) {\n\t\t\t\tfor (const i in requestUrl) {\n\t\t\t\t\tif (deviceEnabled[i]) {\n\t\t\t\t\t\tthis.log.debug(`device: ${tabletName[i]} enabled`);\n\n\t\t\t\t\t\tthis.log.debug(`API request started ...`);\n\n\t\t\t\t\t\t// Try to reach API and receive data\n\t\t\t\t\t\tawait axios\n\t\t\t\t\t\t\t.get(requestUrl[i])\n\t\t\t\t\t\t\t.then(async (apiResult: { [x: string]: any }): Promise<void> => {\n\t\t\t\t\t\t\t\tif (apiResult['status'] === 200) {\n\t\t\t\t\t\t\t\t\tthis.log.debug(`API request ended successfully --> result from api Request: ${JSON.stringify(apiResult['data'])}`);\n\n\t\t\t\t\t\t\t\t\tif (mqttEnabled) {\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(`get the MQTT states`);\n\t\t\t\t\t\t\t\t\t\tawait this.mqttRequest(parseInt(i));\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(`MQTT states were obtained`);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis.log.debug(`State Create is now running ...`);\n\t\t\t\t\t\t\t\t\tawait this.create_State(apiResult, parseInt(i));\n\t\t\t\t\t\t\t\t\tthis.log.debug(`State Create was carried out`);\n\n\t\t\t\t\t\t\t\t\tthis.log.debug(`States are now written`);\n\t\t\t\t\t\t\t\t\tawait this.state_write(apiResult, parseInt(i));\n\n\t\t\t\t\t\t\t\t\tthis.setState(`${tabletName[i]}.lastInfoUpdate`, { val: Date.now(), ack: true });\n\t\t\t\t\t\t\t\t\tthis.log.debug(`The last update of the state was on: ${Date.now()}`);\n\n\t\t\t\t\t\t\t\t\t// clear log message timer\n\t\t\t\t\t\t\t\t\tif (logMessageTimer[i]) clearTimeout(logMessageTimer[i]);\n\t\t\t\t\t\t\t\t\tthis.log.debug(`logMessageTimer for ${tabletName[i]} will be deleted`);\n\t\t\t\t\t\t\t\t\tlogMessage[i] = false;\n\t\t\t\t\t\t\t\t\tthis.log.debug(`logMessage set to ${logMessage[i]} for ${tabletName[i]}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(async (error: any): Promise<void> => {\n\t\t\t\t\t\t\t\tif (!logMessage[i]) {\n\t\t\t\t\t\t\t\t\tlogMessage[i] = true;\n\t\t\t\t\t\t\t\t\tthis.log.debug(`logMessage set to ${logMessage[i]} for ${tabletName[i]}`);\n\n\t\t\t\t\t\t\t\t\tthis.log.error(`[Request] ${tabletName[i]} Unable to contact: ${error} | ${error}`);\n\t\t\t\t\t\t\t\t} else if (!logMessageTimer[i]) {\n\t\t\t\t\t\t\t\t\tif (logMessageTimer[i]) clearTimeout(logMessageTimer[i]);\n\t\t\t\t\t\t\t\t\tthis.log.debug(`logMessageTimer for ${tabletName[i]} will be deleted`);\n\n\t\t\t\t\t\t\t\t\tthis.log.debug(`set logMessageTimer for ${tabletName[i]} to ${3600000 / 60000} min`);\n\t\t\t\t\t\t\t\t\tlogMessageTimer[i] = setTimeout(async () => {\n\t\t\t\t\t\t\t\t\t\tlogMessage[i] = false;\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(`logMessage set to ${logMessage[i]} for ${tabletName[i]}`);\n\t\t\t\t\t\t\t\t\t}, 3600000);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.log.debug(`set requestTimeout to ${interval / 1000} sec`);\n\t\t\t\trequestTimeout = setTimeout(async () => {\n\t\t\t\t\tthis.log.debug(`request is restarted`);\n\t\t\t\t\tawait this.request();\n\t\t\t\t}, interval);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[Request function] has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync mqttRequest(index: number): Promise<void> {\n\t\tmqttObj = [];\n\n\t\tconst mqttBattery: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.battery`);\n\t\tif (mqttBattery !== null && mqttBattery !== undefined) {\n\t\t\tif (typeof mqttBattery.val === 'string') {\n\t\t\t\tmqttObj.push({ battery: JSON.parse(mqttBattery.val) });\n\t\t\t}\n\t\t}\n\n\t\tconst mqttLight: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.light`);\n\t\tif (mqttLight !== null && mqttLight !== undefined) {\n\t\t\tif (typeof mqttLight.val === 'string') {\n\t\t\t\tmqttObj.push({ light: JSON.parse(mqttLight.val) });\n\t\t\t}\n\t\t}\n\n\t\tconst mqttMotion: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.motion`);\n\t\tif (mqttMotion !== null && mqttMotion !== undefined) {\n\t\t\tif (typeof mqttMotion.val === 'string') {\n\t\t\t\tmqttObj.push({ motion: JSON.parse(mqttMotion.val) });\n\t\t\t}\n\t\t}\n\n\t\tconst mqttFace: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.face`);\n\t\tif (mqttFace !== null && mqttFace !== undefined) {\n\t\t\tif (typeof mqttFace.val === 'string') {\n\t\t\t\tmqttObj.push({ face: JSON.parse(mqttFace.val) });\n\t\t\t}\n\t\t}\n\n\t\tconst mqttQrcode: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.qrcode`);\n\t\tif (mqttQrcode !== null && mqttQrcode !== undefined) {\n\t\t\tif (typeof mqttQrcode.val === 'string') {\n\t\t\t\tmqttObj.push({ qrcode: JSON.parse(mqttQrcode.val) });\n\t\t\t}\n\t\t}\n\n\t\tconst mqttMagneticField: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.magneticField`);\n\t\tif (mqttMagneticField !== null && mqttMagneticField !== undefined) {\n\t\t\tif (typeof mqttMagneticField.val === 'string') {\n\t\t\t\tmqttObj.push({\n\t\t\t\t\tmagneticField: JSON.parse(mqttMagneticField.val),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst mqttPressure: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.pressure`);\n\t\tif (mqttPressure !== null && mqttPressure !== undefined) {\n\t\t\tif (typeof mqttPressure.val === 'string') {\n\t\t\t\tmqttObj.push({ pressure: JSON.parse(mqttPressure.val) });\n\t\t\t}\n\t\t}\n\n\t\tconst mqttTemperature: ioBroker.State | null | undefined = await this.getForeignStateAsync(`${mqttPath[index]}.sensor.temperature`);\n\t\tif (mqttTemperature !== null && mqttTemperature !== undefined) {\n\t\t\tif (typeof mqttTemperature.val === 'string') {\n\t\t\t\tmqttObj.push({ temperature: JSON.parse(mqttTemperature.val) });\n\t\t\t}\n\t\t}\n\t}\n\n\tasync state_write(res: { [x: string]: any; data?: any }, index: number): Promise<void> {\n\t\ttry {\n\t\t\tthis.log.debug(`Preparation for the state write....`);\n\t\t\tthis.log.debug(`stats are written now`);\n\t\t\tfor (const Key in res.data) {\n\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.${Key}`, {\n\t\t\t\t\tval: res.data[Key],\n\t\t\t\t\tack: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tawait this.setStateAsync(`${tabletName[index]}.${Object.keys(infoObjects)[1]}`, {\n\t\t\t\tval: ip[index],\n\t\t\t\tack: true,\n\t\t\t});\n\t\t\tif (mqttEnabled) {\n\t\t\t\tfor (const mqttObjKey in mqttObj) {\n\t\t\t\t\tconst Obj: string[] = Object.keys(mqttObj[mqttObjKey]);\n\n\t\t\t\t\tif (Obj[0] === 'battery') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.battery.battery`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].battery.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.battery.charging`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].battery.charging,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.battery.acPlugged`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].battery.acPlugged,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.battery.usbPlugged`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].battery.usbPlugged,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'light') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.light.light`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].light.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.light.id`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].light.id,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'magneticField') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.magneticField.magneticField`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].magneticField.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'pressure') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.pressure.pressure`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].pressure.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'temperature') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.temperature.temperature`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].temperature.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'motion') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.motion.motion`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].motion.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'face') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.face.face`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].face.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Obj[0] === 'qrcode') {\n\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.sensor.qrcode.qrcode`, {\n\t\t\t\t\t\t\tval: mqttObj[mqttObjKey].qrcode.value,\n\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`state_write has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync sendCommand(id: string, state: ioBroker.State, index: number, cmd: string): Promise<void> {\n\t\tlet value = state.val;\n\t\tswitch (cmd) {\n\t\t\tcase `${commandStates[0]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [clearCache] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { clearCache: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[clearCache] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [clearCache] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[1]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [relaunch] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { relaunch: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[relaunch] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [relaunch] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[2]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [reload] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { reload: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[reload] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [reload] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[3]}`:\n\t\t\t\tthis.log.debug(`command [wake] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { wake: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (commandRequestTimeout[index]) clearTimeout(commandRequestTimeout[index]);\n\t\t\t\t\t\t\tthis.log.debug(`[wake] command was sent successfully Status: ${result['statusText']}`);\n\n\t\t\t\t\t\t\tcommandRequestTimeout[index] = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\tawait this.setState(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [wake] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[4]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [ camera ] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { camera: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[camera] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [camera] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[5]}`:\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tif (value <= 0) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t} else if (value >= 255) {\n\t\t\t\t\t\tvalue = 255;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t\tif (value <= 0) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t} else if (value >= 255) {\n\t\t\t\t\t\tvalue = 255;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [brightness] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { brightness: value })\n\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (commandRequestTimeout[index]) clearTimeout(commandRequestTimeout[index]);\n\t\t\t\t\t\t\tthis.log.debug(`[brightness] command was sent successfully Status: ${result['statusText']}`);\n\n\t\t\t\t\t\t\tcommandRequestTimeout[index] = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [brightness] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[6]}`:\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tif (value >= 100) {\n\t\t\t\t\t\tvalue = 100;\n\t\t\t\t\t} else if (value <= 0) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 100;\n\t\t\t\t\tif (value >= 100) {\n\t\t\t\t\t\tvalue = 100;\n\t\t\t\t\t} else if (value <= 0) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [volume] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { volume: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[volume] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [volume] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[7]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [url] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { url: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[url] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [url] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[8]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [urlAudio] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { audio: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[urlAudio] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [urlAudio] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[9]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [speak] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { speak: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[speak] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [speak] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[10]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tthis.log.debug(`command [eval] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { eval: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tthis.log.debug(`[eval] command was sent successfully Status: ${result['statusText']}`);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(`sendCommand has a problem sending [eval] command: ${error.message}, stack: ${error.stack}`);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync create_State(res: { [x: string]: any }, index: number): Promise<void> {\n\t\ttry {\n\t\t\tthis.log.debug(`preparation for the statesCreate...`);\n\t\t\tconst requestStatesType: any[] = [];\n\t\t\tconst requestStates = Object.keys(res['data']);\n\t\t\tthis.log.debug(`Read the state name from the apiResult: ${requestStates}`);\n\n\t\t\tfor (const t in requestStates) {\n\t\t\t\trequestStatesType[t] = typeof Object.values(res['data'])[t];\n\t\t\t}\n\t\t\tthis.log.debug(`Read the state Type from the apiResult: ${requestStatesType}`);\n\t\t\tthis.log.debug(`Start the stateCreate for the requestStates`);\n\t\t\tthis.log.debug(`Start the stateCreate for the commandStates and subscribeStates`);\n\n\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}`, {\n\t\t\t\ttype: 'device',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: ip[index],\n\t\t\t\t},\n\t\t\t\tnative: {\n\t\t\t\t\tip: ip[index],\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tfor (const f in folder) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.${folder[f]}`, {\n\t\t\t\t\ttype: 'channel',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `${folder[f]}`,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const obj in commandObjects) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.command.${obj}`, commandObjects[obj]);\n\t\t\t\tthis.subscribeStates(`${tabletName[index]}.command.${obj}`);\n\n\t\t\t\tlet Objects = null;\n\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.command.${obj}`);\n\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\tif (commandObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\tconst common = commandObjects[obj].common;\n\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.command.${obj}`, {\n\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const obj in infoObjects) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.${obj}`, infoObjects[obj]);\n\t\t\t\tlet Objects = null;\n\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.${obj}`);\n\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\tif (infoObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\tconst common = infoObjects[obj].common;\n\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.${obj}`, {\n\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mqttEnabled) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor`, {\n\t\t\t\t\ttype: 'channel',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `Sensor values`,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\n\t\t\t\tfor (const mqttObjKey in mqttObj) {\n\t\t\t\t\tconst Obj = Object.keys(mqttObj[mqttObjKey]);\n\n\t\t\t\t\tif (Obj[0] === 'battery') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.battery`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `battery Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in batteryObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.battery.${obj}`, batteryObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.battery.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (batteryObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = batteryObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.battery.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'light') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.light`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `light Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in lightObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.light.${obj}`, lightObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.light.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (lightObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = lightObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.light.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'magneticField') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.magneticField`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `magneticField Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in magneticFieldObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.magneticField.${obj}`, magneticFieldObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.magneticField.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (magneticFieldObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = magneticFieldObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.magneticField.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'pressure') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.pressure`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `pressure Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in pressureObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.pressure.${obj}`, pressureObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.pressure.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (pressureObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = pressureObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.pressure.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'temperature') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.temperature`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `temperature Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in temperatureObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.temperature.${obj}`, temperatureObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.temperature.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (temperatureObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = temperatureObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.temperature.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'motion') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.motion`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `motion Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in motionObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.motion.${obj}`, motionObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.motion.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (motionObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = motionObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.motion.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'face') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.face`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `face Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in faceObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.face.${obj}`, faceObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.face.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (faceObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = faceObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.face.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Obj[0] === 'qrcode') {\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.qrcode`, {\n\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: `qrcode Sensor`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const obj in qrcodeObjects) {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.qrcode.${obj}`, qrcodeObjects[obj]);\n\n\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.sensor.qrcode.${obj}`);\n\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\tif (qrcodeObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\tconst common = qrcodeObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.sensor.qrcode.${obj}`, {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.log.info(`the state ${Objects._id} has a wrong object structure and was adapted to the new one`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const r in requestStates) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.${requestStates[r]}`, {\n\t\t\t\t\ttype: 'state',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `${requestStates[r]}`,\n\t\t\t\t\t\ttype: requestStatesType[r],\n\t\t\t\t\t\trole: `state`,\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.log.debug(`subscribe to all stats in the command folder for ${tabletName[index]}`);\n\t\t} catch (error) {\n\t\t\tthis.log.error(`stateCreate has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (requestTimeout) clearTimeout(requestTimeout);\n\t\t\tfor (const Unl in tabletName) {\n\t\t\t\tif (logMessageTimer[Unl]) clearTimeout(logMessageTimer[Unl]);\n\t\t\t\tif (commandRequestTimeout[Unl]) clearTimeout(commandRequestTimeout[Unl]);\n\t\t\t}\n\t\t\tthis.log.debug(`All timers are canceled because the adapter has been switched off`);\n\t\t\tthis.setState('info.connection', false, true);\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\ttry {\n\t\t\tif (state) {\n\t\t\t\t// The state was changed\n\t\t\t\tfor (const change in tabletName) {\n\t\t\t\t\tif (deviceEnabled[change]) {\n\t\t\t\t\t\tif (state.from === `system.adapter.${mqttInstance}`) {\n\t\t\t\t\t\t\tthis.request();\n\t\t\t\t\t\t\tthis.log.debug(`state ${id} changed: ${state.val} from: ${this.namespace}`);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const change in tabletName) {\n\t\t\t\t\tif (deviceEnabled[change] && !state.ack) {\n\t\t\t\t\t\tfor (const i in commandStates) {\n\t\t\t\t\t\t\tif (id === `${this.namespace}.${tabletName[change]}.command.${commandStates[i]}`) {\n\t\t\t\t\t\t\t\tthis.log.debug(`state ${id} changed: ${state.val} from: ${this.namespace}`);\n\t\t\t\t\t\t\t\tthis.sendCommand(id, state, parseInt(change), commandStates[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// The state was deleted\n\t\t\t\tthis.log.debug(`state ${id} deleted`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[onStateChane ${id}] error: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\t// private onMessage(obj: ioBroker.Message): void {\n\t// \tif (typeof obj === 'object' && obj.message) {\n\t// \t\tif (obj.command === 'send') {\n\t// \t\t\t// e.g. send email or pushover or whatever\n\t// \t\t\tthis.log.info('send command');\n\n\t// \t\t\t// Send response in callback if required\n\t// \t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Wallpanel(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Wallpanel())();\n}\n"],
  "mappings": "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",
  "names": []
}
