{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.0.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\n// Load your modules here, e.g.:\nimport axios from 'axios';\nimport {\n\tobject_command_definitions,\n\tobject_info_definitions,\n\tobject_mqttBattery_definitions,\n\tobject_mqttFace_definitions,\n\tobject_mqttLight_definitions,\n\tobject_mqttMagneticField_definitions,\n\tobject_mqttMotion_definitions,\n\tobject_mqttPressure_definitions,\n\tobject_mqttQrcode_definitions,\n\tobject_mqttTemperature_definitions,\n} from './lib/object_definition';\n\nimport { replaceFunktion } from './lib/replaceFunktion';\n\n// Global variables here\n//rest API Obj\nconst commandObjects = object_command_definitions;\nconst infoObjects = object_info_definitions;\n\n//MQTT Obj\nconst batteryObjects = object_mqttBattery_definitions;\nconst lightObjects = object_mqttLight_definitions;\nconst magneticFieldObjects = object_mqttMagneticField_definitions;\nconst pressureObjects = object_mqttPressure_definitions;\nconst temperatureObjects = object_mqttTemperature_definitions;\nconst motionObjects = object_mqttMotion_definitions;\nconst faceObjects = object_mqttFace_definitions;\nconst qrcodeObjects = object_mqttQrcode_definitions;\n\nclass Wallpanel extends utils.Adapter {\n\t//timeout\n\tprivate readonly commandRequestTimeout: NodeJS.Timeout[];\n\tprivate readonly logMessageTimer: NodeJS.Timeout[];\n\tprivate requestTimeout: NodeJS.Timeout | null = null;\n\t//variable\n\tprivate readonly adapterIDs: string[];\n\tprivate readonly commandStates: string[];\n\tprivate readonly folder: string[];\n\tprivate readonly deviceEnabled: boolean[];\n\tprivate readonly ip: string[];\n\tprivate readonly device_ip: string[];\n\tprivate readonly port: number[];\n\tprivate readonly connectionState: boolean[];\n\tprivate readonly tabletName: string[];\n\tprivate readonly requestUrl: string[];\n\tprivate readonly sendUrl: string[];\n\tprivate readonly logMessage: boolean[];\n\tprivate readonly mqttAttribute: string[];\n\tprivate mqttObj: { [key: string]: any }[];\n\tprivate readonly mqttPath: any[];\n\tprivate mqttInstance: string | null;\n\tprivate readonly tabletMqttEnabled: boolean[];\n\tprivate interval: number;\n\tprivate mqttInstalled: boolean;\n\tprivate mqttEnabled: boolean;\n\tprivate readonly abortController: AbortController;\n\tprivate logLevel: ioBroker.StateValue;\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'wallpanel',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t\tthis.on('message', this.onMessage.bind(this));\n\t\tthis.abortController = new AbortController();\n\t\tthis.logLevel = 'info';\n\t\tthis.ip = [];\n\t\tthis.device_ip = [];\n\t\tthis.port = [];\n\t\tthis.connectionState = [];\n\t\tthis.tabletName = [];\n\t\tthis.requestUrl = [];\n\t\tthis.sendUrl = [];\n\t\tthis.logMessage = [];\n\t\tthis.adapterIDs = [];\n\t\tthis.deviceEnabled = [];\n\t\tthis.folder = [`command`];\n\t\tthis.commandRequestTimeout = [];\n\t\tthis.logMessageTimer = [];\n\t\tthis.requestTimeout = null;\n\t\tthis.mqttObj = [];\n\t\tthis.mqttPath = [];\n\t\tthis.mqttInstance = null;\n\t\tthis.tabletMqttEnabled = [];\n\t\tthis.interval = 30;\n\t\tthis.mqttInstalled = false;\n\t\tthis.mqttEnabled = false;\n\t\tthis.commandStates = [\n\t\t\t`clearCache`,\n\t\t\t`relaunch`,\n\t\t\t`reload`,\n\t\t\t`wake`,\n\t\t\t`camera`,\n\t\t\t`brightness`,\n\t\t\t`volume`,\n\t\t\t`url`,\n\t\t\t`urlAudio`,\n\t\t\t`speak`,\n\t\t\t`eval`,\n\t\t\t'settings',\n\t\t];\n\t\tthis.mqttAttribute = [\n\t\t\t'battery',\n\t\t\t'light',\n\t\t\t'motion',\n\t\t\t'face',\n\t\t\t'qrcode',\n\t\t\t'magneticField',\n\t\t\t'pressure',\n\t\t\t'temperature',\n\t\t];\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Reset the connection indicator during startup\n\t\tthis.setState('info.connection', false, true);\n\n\t\t// Initialize your adapter here\n\t\tawait this.initialization();\n\t\tawait this.request();\n\t}\n\n\tasync initialization(): Promise<void> {\n\t\ttry {\n\t\t\t// Check if the log output from the adapter is in debug mode.\n\t\t\tconst logLevelObj = await this.getForeignStateAsync(`system.adapter.${this.namespace}.logLevel`);\n\t\t\tif (logLevelObj === undefined) {\n\t\t\t\tthis.logLevel = 'info';\n\t\t\t} else {\n\t\t\t\tif (logLevelObj !== null) {\n\t\t\t\t\tthis.logLevel = logLevelObj.val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.logLevel === 'debug') this.log.debug(`prepare adapter for initialization`);\n\n\t\t\t// polling min 10 sec.\n\t\t\tthis.interval = this.config.interval * 1000;\n\t\t\tif (this.interval < 10000) {\n\t\t\t\tthis.interval = 10000;\n\t\t\t}\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Adapter config for interval readout --> ${this.interval} ms`);\n\n\t\t\t// ip and port\n\t\t\tconst devices = this.config.devices;\n\t\t\tif (\n\t\t\t\t(!devices && Array.isArray(devices) && devices['length'] !== 0) ||\n\t\t\t\t(Array.isArray(devices) && devices['length'] !== 0)\n\t\t\t) {\n\t\t\t\tfor (const i in devices) {\n\t\t\t\t\tif (devices.hasOwnProperty(i)) {\n\t\t\t\t\t\tconst name = devices[i]['name'];\n\t\t\t\t\t\tthis.device_ip[i] = devices[i]['ip'];\n\t\t\t\t\t\tthis.port[i] = devices[i]['port'];\n\t\t\t\t\t\tthis.deviceEnabled[i] = devices[i]['enabled'];\n\t\t\t\t\t\tthis.mqttInstalled = this.config.mqttInstalled;\n\t\t\t\t\t\tthis.mqttEnabled = this.config.enabledMqtt;\n\t\t\t\t\t\tthis.mqttInstance = this.config.mqttInstance;\n\t\t\t\t\t\tthis.tabletMqttEnabled[i] = devices[i]['mqttEnabled'];\n\t\t\t\t\t\tthis.connectionState[i] = false;\n\t\t\t\t\t\tif (devices[i]['topic'] !== '') {\n\t\t\t\t\t\t\tthis.mqttPath[i] = `${this.mqttInstance}.${devices[i]['topic'].replace(\n\t\t\t\t\t\t\t\t'/',\n\t\t\t\t\t\t\t\t'.',\n\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.mqttPath[i] = 'undefined';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization Ip for ${name}: ${this.ip[i]}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization port for ${name}: ${this.port[i]}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t`initialization deviceEnabled for ${name}: ${this.deviceEnabled[i]}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (this.logLevel === 'debug') this.log.debug(`initialization tabletName: ${name}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization mqttInstalled: ${this.mqttInstalled}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization mqttEnabled: ${this.mqttEnabled}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization mqttInstance: ${this.mqttInstance}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization mqttPaths for ${name}: ${this.mqttPath}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t`initialization tabletMqttEnabled for ${name}: ${this.tabletMqttEnabled[i]}`,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfor (const mqttPathKey in this.mqttPath) {\n\t\t\t\t\t\t\tif (this.mqttPath.hasOwnProperty(mqttPathKey)) {\n\t\t\t\t\t\t\t\tif (this.mqttPath[mqttPathKey] !== 'undefined' && this.tabletMqttEnabled[i]) {\n\t\t\t\t\t\t\t\t\tthis.subscribeForeignStates(\n\t\t\t\t\t\t\t\t\t\t`${this.mqttPath[mqttPathKey]}.sensor.motion`,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.subscribeForeignStates(`${this.mqttPath[mqttPathKey]}.sensor.face`);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`[ mqttSubscribeMotion ] mqtt Topic for ${name} with ip ${this.device_ip[i]} is not set`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`Check whether the IP address is available for the ${name}`);\n\t\t\t\t\t\tthis.deviceEnabled[i] = this.device_ip[i] !== '' && this.deviceEnabled[i];\n\t\t\t\t\t\tif (this.device_ip[i] === '')\n\t\t\t\t\t\t\tthis.log.warn(`${name} has no ip address device is not queried`);\n\n\t\t\t\t\t\tif (this.device_ip[i] !== undefined || this.device_ip[i] !== '') {\n\t\t\t\t\t\t\tconst ipRegex = /^(?:(?:25[0-5]|2[0-4]\\d|1?\\d?\\d)(?:\\.(?!$)|$)){4}$/; //regex from https://regex101.com/library/ChFXjy\n\n\t\t\t\t\t\t\tif (this.device_ip[i].match(ipRegex)) {\n\t\t\t\t\t\t\t\t// valid\n\t\t\t\t\t\t\t\tthis.ip[i] = this.device_ip[i];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// invalid\n\t\t\t\t\t\t\t\tthis.log.warn('No Permitted Ip Address');\n\t\t\t\t\t\t\t\tthis.deviceEnabled[i] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.requestUrl[i] = `http://${this.ip[i]}:${this.port[i]}/api/state`;\n\t\t\t\t\t\tthis.sendUrl[i] = `http://${this.ip[i]}:${this.port[i]}/api/command`;\n\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization requestUrl: ${this.requestUrl[i]}`);\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`initialization sendUrl: ${this.sendUrl[i]}`);\n\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`it is checked whether the name of the device is entered`);\n\t\t\t\t\t\t// Prepare tablet name\n\t\t\t\t\t\tif (name !== '') {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(`the name of the device is entered and is used --> ${name}`);\n\t\t\t\t\t\t\tthis.tabletName[i] = <string>await replaceFunktion(name);\n\t\t\t\t\t\t\tthis.adapterIDs[i] = `${this.namespace}.${this.tabletName[i]}`;\n\t\t\t\t\t\t} else if (this.deviceEnabled[i]) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`The name of the device is not entered; the IP address is used for the name --> ${this.ip[i]}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.tabletName[i] = <string>await replaceFunktion(this.ip[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`Tablet name is being prepared: ${this.tabletName[i]}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState('info.connection', true, true);\n\t\t\t\tthis.log.info(`Adapter has been fully initialized`);\n\t\t\t\tthis.log.info(`installed Adapter Version ${this.common.version}`);\n\t\t\t} else {\n\t\t\t\tthis.deviceEnabled[1] = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState('info.connection', false, true);\n\t\t\tthis.log.error(`initialization has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync request(): Promise<void> {\n\t\ttry {\n\t\t\tif (this.requestTimeout) clearTimeout(this.requestTimeout);\n\t\t\tif (\n\t\t\t\t(!this.requestUrl && Array.isArray(this.requestUrl) && this.requestUrl['length'] !== 0) ||\n\t\t\t\t(Array.isArray(this.requestUrl) && this.requestUrl['length'] !== 0)\n\t\t\t) {\n\t\t\t\tfor (const i in this.requestUrl) {\n\t\t\t\t\tif (this.requestUrl.hasOwnProperty(i)) {\n\t\t\t\t\t\tif (this.deviceEnabled[i]) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(`device: ${this.tabletName[i]} enabled`);\n\t\t\t\t\t\t\tif (this.logLevel === 'debug') this.log.debug(`API request started ...`);\n\n\t\t\t\t\t\t\t// Try to reach API and receive data\n\t\t\t\t\t\t\tawait axios\n\t\t\t\t\t\t\t\t.get(this.requestUrl[i])\n\t\t\t\t\t\t\t\t.then(async (apiResult: { [x: string]: any }): Promise<void> => {\n\t\t\t\t\t\t\t\t\tif (apiResult['status'] === 200) {\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`API request ended successfully --> result from api Request: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\tapiResult['data'],\n\t\t\t\t\t\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// check if mqtt is turned on and installed, if yes then mqtt data request\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tthis.mqttEnabled &&\n\t\t\t\t\t\t\t\t\t\t\tthis.mqttInstalled &&\n\t\t\t\t\t\t\t\t\t\t\tthis.tabletMqttEnabled[i]\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(`requesting data from mqtt`);\n\t\t\t\t\t\t\t\t\t\t\tawait this.mqttRequest(parseInt(i));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// create an object with the data from the API request and all required objects\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`State Create is now running for ${this.tabletName[i]} ...`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tawait this.create_State(apiResult, parseInt(i));\n\n\t\t\t\t\t\t\t\t\t\t// check if all objects are still needed and delete them if necessary\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(`checking whether all objects are needed`);\n\t\t\t\t\t\t\t\t\t\tawait this.deleteFunction();\n\n\t\t\t\t\t\t\t\t\t\t// write the data into the created states\n\n\t\t\t\t\t\t\t\t\t\tawait this.state_write(apiResult, parseInt(i));\n\n\t\t\t\t\t\t\t\t\t\t// set the last request time\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(`${this.tabletName[i]}.lastInfoUpdate`, {\n\t\t\t\t\t\t\t\t\t\t\tval: Date.now(),\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`The last update of the state was on: ${Date.now()}`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// set the connection state to true\n\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(`${this.tabletName[i]}.connected`, {\n\t\t\t\t\t\t\t\t\t\t\tval: true,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.connectionState[i] = true;\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(`The connection state was set to true`);\n\n\t\t\t\t\t\t\t\t\t\t// clear log message timer\n\t\t\t\t\t\t\t\t\t\tif (this.logMessageTimer[i]) clearTimeout(this.logMessageTimer[i]);\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`logMessageTimer for ${this.tabletName[i]} will be deleted`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.logMessage[i] = false;\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`logMessage set to ${this.logMessage[i]} for ${this.tabletName[i]}`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch(async (error: any): Promise<void> => {\n\t\t\t\t\t\t\t\t\tif (!this.logMessage[i]) {\n\t\t\t\t\t\t\t\t\t\tthis.logMessage[i] = true;\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`logMessage set to ${this.logMessage[i]} for ${this.tabletName[i]}`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t// set connection state to false\n\t\t\t\t\t\t\t\t\t\tthis.setState(`${this.tabletName[i]}.connected`, {\n\t\t\t\t\t\t\t\t\t\t\tval: false,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tthis.connectionState[i] = false;\n\t\t\t\t\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t\t\t\t\t`[Request] ${this.tabletName[i]} Unable to contact: ${error} | ${error}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else if (!this.logMessageTimer[i]) {\n\t\t\t\t\t\t\t\t\t\tif (this.logMessageTimer[i]) clearTimeout(this.logMessageTimer[i]);\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`logMessageTimer for ${this.tabletName[i]} will be deleted`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`set logMessageTimer for ${this.tabletName[i]} to ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t3600000 / 60000\n\t\t\t\t\t\t\t\t\t\t\t\t} min`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.logMessageTimer[i] = setTimeout(async () => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logMessage[i] = false;\n\t\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`logMessage set to ${this.logMessage[i]} for ${this.tabletName[i]}`,\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}, 3600000);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawait this.deleteFunction();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`set requestTimeout to ${this.interval / 1000} sec`);\n\t\t\t\tthis.requestTimeout = setTimeout(async () => {\n\t\t\t\t\tif (this.logLevel === 'debug') this.log.debug(`request is restarted`);\n\t\t\t\t\tawait this.request();\n\t\t\t\t}, this.interval);\n\t\t\t} else {\n\t\t\t\t// start the delete function if no tablets are configured\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t`no tablets are configured --> delete function will be started for all objects`,\n\t\t\t\t\t);\n\t\t\t\tawait this.deleteFunction();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[Request function] has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync mqttRequest(index: number): Promise<void> {\n\t\tthis.mqttObj = [];\n\n\t\tfor (const i in this.mqttAttribute) {\n\t\t\tif (this.mqttAttribute.hasOwnProperty(i)) {\n\t\t\t\tif (this.mqttPath[index] !== 'undefined') {\n\t\t\t\t\tconst mqttState: ioBroker.State | null | undefined = await this.getForeignStateAsync(\n\t\t\t\t\t\t`${this.mqttPath[index]}.sensor.${this.mqttAttribute[i]}`,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (mqttState) {\n\t\t\t\t\t\tif (this.mqttObj) {\n\t\t\t\t\t\t\tif (typeof mqttState.val === 'string') {\n\t\t\t\t\t\t\t\tthis.mqttObj.push(<{ [key: string]: any }>{\n\t\t\t\t\t\t\t\t\t[`${this.mqttAttribute[i]}`]: JSON.parse(mqttState.val),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t`[ mqttRequest ] mqtt Topic for ${this.tabletName[index]} with ip ${this.device_ip[index]} is not set`,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.logLevel === 'debug') this.log.debug(`MQTT states were obtained`);\n\t\tif (this.logLevel === 'debug') this.log.debug(`MQTT states are: ${JSON.stringify(this.mqttObj)}`);\n\t}\n\n\tasync state_write(res: { [x: string]: any; data?: any }, index: number): Promise<void> {\n\t\ttry {\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Preparation for the state write for ${this.tabletName[index]} ....`);\n\t\t\tif (this.logLevel === 'debug') this.log.debug(`stats are written now`);\n\t\t\tlet mqttJsonObj = {};\n\t\t\tfor (const key in res.data) {\n\t\t\t\tif (res.data.hasOwnProperty(key)) {\n\t\t\t\t\tawait this.setStateAsync(`${this.tabletName[index]}.${key}`, {\n\t\t\t\t\t\tval: res.data[key],\n\t\t\t\t\t\tack: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.setStateAsync(`${this.tabletName[index]}.${Object.keys(infoObjects)[1]}`, {\n\t\t\t\tval: this.ip[index],\n\t\t\t\tack: true,\n\t\t\t});\n\t\t\tawait this.setStateAsync(`${this.tabletName[index]}.${Object.keys(infoObjects)[2]}`, {\n\t\t\t\tval: `http://${this.ip[index]}:${this.port[index]}/camera/stream`,\n\t\t\t\tack: true,\n\t\t\t});\n\n\t\t\tfor (const mqttObjKey in this.mqttObj) {\n\t\t\t\tif (this.mqttObj.hasOwnProperty(mqttObjKey)) {\n\t\t\t\t\tmqttJsonObj = {\n\t\t\t\t\t\t...mqttJsonObj,\n\t\t\t\t\t\t[`${Object.keys(this.mqttObj[mqttObjKey])[0]}`]:\n\t\t\t\t\t\t\tthis.mqttObj[mqttObjKey][Object.keys(this.mqttObj[mqttObjKey])[0]],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet jsonObj = {\n\t\t\t\t[`${Object.keys(infoObjects)[0]}`]: Date.now(),\n\t\t\t\t[`${Object.keys(infoObjects)[1]}`]: this.ip[index],\n\t\t\t\t[`${\n\t\t\t\t\tObject.keys(infoObjects)[2]\n\t\t\t\t}`]: `http://${this.ip[index]}:${this.port[index]}/camera/stream`,\n\t\t\t\t[`${Object.keys(infoObjects)[3]}`]: this.connectionState[index],\n\t\t\t\t...res.data,\n\t\t\t};\n\t\t\tif (this.tabletMqttEnabled[index]) {\n\t\t\t\tjsonObj = {\n\t\t\t\t\t...jsonObj,\n\t\t\t\t\t...mqttJsonObj,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (this.logLevel === 'debug') this.log.debug(`JSON object is: ${JSON.stringify(jsonObj)}`);\n\t\t\tawait this.setStateAsync(`${this.tabletName[index]}.${Object.keys(infoObjects)[4]}`, {\n\t\t\t\tval: JSON.stringify(jsonObj),\n\t\t\t\tack: true,\n\t\t\t});\n\n\t\t\t// Check if mqtt is installed and switched on in the Config\n\t\t\tif (this.mqttEnabled && this.mqttInstalled && this.tabletMqttEnabled[index]) {\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`MQTT state is written now for ${this.tabletName[index]} ....`);\n\t\t\t\tfor (const mqttObjKey in this.mqttObj) {\n\t\t\t\t\tif (this.mqttObj.hasOwnProperty(mqttObjKey)) {\n\t\t\t\t\t\tfor (const mqttAttributeKey of this.mqttAttribute) {\n\t\t\t\t\t\t\tif (Object.keys(this.mqttObj[mqttObjKey]).includes(mqttAttributeKey)) {\n\t\t\t\t\t\t\t\tfor (const key in Object.keys(this.mqttObj[mqttObjKey][mqttAttributeKey])) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tObject.keys(\n\t\t\t\t\t\t\t\t\t\t\tthis.mqttObj[mqttObjKey][mqttAttributeKey],\n\t\t\t\t\t\t\t\t\t\t).hasOwnProperty(key)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tObject.keys(this.mqttObj[mqttObjKey][mqttAttributeKey])[key] !==\n\t\t\t\t\t\t\t\t\t\t\t'unit'\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t// extract on the object the attributes\n\t\t\t\t\t\t\t\t\t\t\tconst attribute: string = Object.keys(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.mqttObj[mqttObjKey][mqttAttributeKey],\n\t\t\t\t\t\t\t\t\t\t\t)[key];\n\t\t\t\t\t\t\t\t\t\t\t// create a state name from the attributes\n\t\t\t\t\t\t\t\t\t\t\tconst state: string =\n\t\t\t\t\t\t\t\t\t\t\t\tObject.keys(this.mqttObj[mqttObjKey][mqttAttributeKey])[\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t] === 'value'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? Object.keys(this.mqttObj[mqttObjKey])[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: Object.keys(this.mqttObj[mqttObjKey][mqttAttributeKey])[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ];\n\t\t\t\t\t\t\t\t\t\t\t// extract on the object the value\n\t\t\t\t\t\t\t\t\t\t\tconst value =\n\t\t\t\t\t\t\t\t\t\t\t\tthis.mqttObj[mqttObjKey][mqttAttributeKey][attribute];\n\n\t\t\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.${mqttAttributeKey}.${state}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tval: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.logLevel === 'debug') this.log.debug(`MQTT states were written`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`state_write has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync sendCommand(id: string, state: ioBroker.State, index: number, cmd: string): Promise<void> {\n\t\tlet value = state.val;\n\t\tswitch (cmd) {\n\t\t\tcase `${this.commandStates[0]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [clearCache] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { clearCache: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[clearCache] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [clearCache] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[1]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [relaunch] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { relaunch: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[relaunch] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [relaunch] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[2]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [reload] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { reload: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[reload] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [reload] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[3]}`:\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [wake] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { wake: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.commandRequestTimeout[index])\n\t\t\t\t\t\t\t\tclearTimeout(this.commandRequestTimeout[index]);\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[wake] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthis.commandRequestTimeout[index] = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\tawait this.setState(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [wake] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[4]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [ camera ] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { camera: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[camera] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [camera] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[5]}`:\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tif (value <= 0) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t} else if (value >= 255) {\n\t\t\t\t\t\tvalue = 255;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t\tif (value <= 0) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t} else if (value >= 255) {\n\t\t\t\t\t\tvalue = 255;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [brightness] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { brightness: value })\n\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.commandRequestTimeout[index])\n\t\t\t\t\t\t\t\tclearTimeout(this.commandRequestTimeout[index]);\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[brightness] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthis.commandRequestTimeout[index] = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [brightness] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[6]}`:\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tif (value >= 100) {\n\t\t\t\t\t\tvalue = 100;\n\t\t\t\t\t} else if (value <= 0) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 100;\n\t\t\t\t\tif (value >= 100) {\n\t\t\t\t\t\tvalue = 100;\n\t\t\t\t\t} else if (value <= 0) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [volume] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { volume: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[volume] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [volume] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[7]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [url] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { url: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[url] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [url] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[8]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [urlAudio] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { audio: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[urlAudio] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [urlAudio] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[9]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [speak] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { speak: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[speak] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [speak] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[10]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [eval] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { eval: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[eval] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [eval] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${this.commandStates[11]}`: {\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [ settings ] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(this.sendUrl[index], { settings: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[ settings ] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [ settings ] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync create_State(res: { [x: string]: any }, index: number): Promise<void> {\n\t\ttry {\n\t\t\tif (this.logLevel === 'debug') this.log.debug(`preparation for the statesCreate...`);\n\t\t\tconst requestStatesType: any[] = [];\n\t\t\tconst requestStates = Object.keys(res['data']);\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Read the state name from the apiResult: ${requestStates}`);\n\n\t\t\tfor (const t in requestStates) {\n\t\t\t\tif (requestStates.hasOwnProperty(t)) {\n\t\t\t\t\trequestStatesType[t] = typeof Object.values(res['data'])[t];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Read the state Type from the apiResult: ${requestStatesType}`);\n\t\t\tif (this.logLevel === 'debug') this.log.debug(`Start the stateCreate for the requestStates`);\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Start the stateCreate for the commandStates and subscribeStates`);\n\n\t\t\t// create device folder\n\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}`, {\n\t\t\t\ttype: 'device',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: `${this.config.devices[index].name}`,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\t// create channel folder\n\t\t\tfor (const f in this.folder) {\n\t\t\t\tif (this.folder.hasOwnProperty(f)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}.${this.folder[f]}`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: `${this.folder[f]}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create commandStates\n\t\t\tfor (const obj in commandObjects) {\n\t\t\t\tif (commandObjects.hasOwnProperty(obj)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t`${this.tabletName[index]}.command.${obj}`,\n\t\t\t\t\t\tcommandObjects[obj],\n\t\t\t\t\t);\n\t\t\t\t\tthis.subscribeStates(`${this.tabletName[index]}.command.${obj}`);\n\n\t\t\t\t\tlet Objects = null;\n\t\t\t\t\tObjects = await this.getObjectAsync(`${this.tabletName[index]}.command.${obj}`);\n\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\tif (commandObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\tconst common = commandObjects[obj].common;\n\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${this.tabletName[index]}.command.${obj}`, {\n\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create infoStates\n\t\t\tfor (const obj in infoObjects) {\n\t\t\t\tif (infoObjects.hasOwnProperty(obj)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}.${obj}`, infoObjects[obj]);\n\t\t\t\t\tlet Objects = null;\n\t\t\t\t\tObjects = await this.getObjectAsync(`${this.tabletName[index]}.${obj}`);\n\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\tif (infoObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\tconst common = infoObjects[obj].common;\n\t\t\t\t\t\t\t\tawait this.extendObjectAsync(`${this.tabletName[index]}.${obj}`, {\n\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check if the mqtt is enabled\n\t\t\tif (this.mqttEnabled && this.mqttInstalled) {\n\t\t\t\tif (this.mqttPath[index] !== 'undefined' && this.mqttObj.length !== 0) {\n\t\t\t\t\t// create mqttChannels\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}.sensor`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: `Sensor values`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\t// create all mqttStates\n\t\t\t\t\tfor (const mqttObjKey in this.mqttObj) {\n\t\t\t\t\t\tif (this.mqttObj.hasOwnProperty(mqttObjKey)) {\n\t\t\t\t\t\t\tconst Obj = Object.keys(this.mqttObj[mqttObjKey]);\n\n\t\t\t\t\t\t\tif (Obj[0] === 'battery') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.battery`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: `battery Sensor`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const obj in batteryObjects) {\n\t\t\t\t\t\t\t\t\tif (batteryObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.battery.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\tbatteryObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.battery.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (batteryObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = batteryObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.battery.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'light') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}.sensor.light`, {\n\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\tname: `light Sensor`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tfor (const key in lightObjects) {\n\t\t\t\t\t\t\t\t\tif (lightObjects.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.light.${key}`,\n\t\t\t\t\t\t\t\t\t\t\tlightObjects[key],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.light.${key}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (lightObjects[key].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = lightObjects[key].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.light.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'magneticField') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.magneticField`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: `magneticField Sensor`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const obj in magneticFieldObjects) {\n\t\t\t\t\t\t\t\t\tif (magneticFieldObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.magneticField.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\tmagneticFieldObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.magneticField.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (magneticFieldObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = magneticFieldObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.magneticField.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'pressure') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.pressure`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: `pressure Sensor`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const obj in pressureObjects) {\n\t\t\t\t\t\t\t\t\tif (pressureObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.pressure.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\tpressureObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.pressure.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (pressureObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = pressureObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.pressure.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'temperature') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.temperature`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: `temperature Sensor`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const obj in temperatureObjects) {\n\t\t\t\t\t\t\t\t\tif (temperatureObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.temperature.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\ttemperatureObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.temperature.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (temperatureObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = temperatureObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.temperature.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'motion') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.motion`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: `motion Sensor`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const obj in motionObjects) {\n\t\t\t\t\t\t\t\t\tif (motionObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.motion.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\tmotionObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.motion.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (motionObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = motionObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.motion.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'face') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}.sensor.face`, {\n\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\tname: `face Sensor`,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tfor (const obj in faceObjects) {\n\t\t\t\t\t\t\t\t\tif (faceObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.face.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\tfaceObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.face.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (faceObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = faceObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.face.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Obj[0] === 'qrcode') {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.qrcode`,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\t\t\tname: `qrcode Sensor`,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const obj in qrcodeObjects) {\n\t\t\t\t\t\t\t\t\tif (qrcodeObjects.hasOwnProperty(obj)) {\n\t\t\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.qrcode.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\tqrcodeObjects[obj],\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.qrcode.${obj}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(\n\t\t\t\t\t\t\t\t\t\t\t\tObjects[`common`],\n\t\t\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (qrcodeObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst common = qrcodeObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${this.tabletName[index]}.sensor.qrcode.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create requestState\n\t\t\tfor (const r in requestStates) {\n\t\t\t\tif (requestStates.hasOwnProperty(r)) {\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${this.tabletName[index]}.${requestStates[r]}`, {\n\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: `${requestStates[r]}`,\n\t\t\t\t\t\t\ttype: requestStatesType[r],\n\t\t\t\t\t\t\trole: `state`,\n\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\twrite: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`subscribe to all stats in the command folder for ${this.tabletName[index]}`);\n\t\t\tif (this.logLevel === 'debug') this.log.debug(`State Create was carried out`);\n\t\t} catch (error) {\n\t\t\tthis.log.error(`stateCreate has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Delete all Device Objects that are no longer configured in the tablet list.\n\t * @returns {Promise<void>}\n\t */\n\tprivate async deleteFunction(): Promise<void> {\n\t\ttry {\n\t\t\tconst tabletDeviceId: string[] = [];\n\t\t\tconst currentAdapterObjects = await this.getAdapterObjectsAsync();\n\t\t\tfor (const currentAdapterObjectsKey in currentAdapterObjects) {\n\t\t\t\tif (currentAdapterObjects.hasOwnProperty(currentAdapterObjectsKey)) {\n\t\t\t\t\tif (currentAdapterObjects[currentAdapterObjectsKey].type === 'device') {\n\t\t\t\t\t\ttabletDeviceId.push(currentAdapterObjects[currentAdapterObjectsKey]._id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tabletDeviceId.length === 0) {\n\t\t\t\tif (this.logLevel === 'debug') this.log.debug('no tablets found in adapter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst deleteId: string[] = [];\n\t\t\tfor (const currentIDKey in tabletDeviceId) {\n\t\t\t\tif (tabletDeviceId.hasOwnProperty(currentIDKey)) {\n\t\t\t\t\tif (this.adapterIDs.find((element: string) => element === tabletDeviceId[currentIDKey])) {\n\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t`The device with the name ${tabletDeviceId[currentIDKey]} is already registered`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeleteId.push(tabletDeviceId[currentIDKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const deleteIdKey in deleteId) {\n\t\t\t\tif (deleteId.hasOwnProperty(deleteIdKey)) {\n\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`delete the device with the ID: ${deleteId[deleteIdKey]}`);\n\t\t\t\t\tawait this.delObjectAsync(deleteId[deleteIdKey], { recursive: true });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug('all tablet objects that are no longer needed have been deleted');\n\t\t} catch (error) {\n\t\t\tthis.log.error(`deleteFunction has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (this.requestTimeout) clearTimeout(this.requestTimeout);\n\t\t\tfor (const Unl in this.tabletName) {\n\t\t\t\tif (this.tabletName.hasOwnProperty(Unl)) {\n\t\t\t\t\tif (this.logMessageTimer[Unl]) clearTimeout(this.logMessageTimer[Unl]);\n\t\t\t\t\tif (this.commandRequestTimeout[Unl]) clearTimeout(this.commandRequestTimeout[Unl]);\n\t\t\t\t\tif (this.deviceEnabled[Unl])\n\t\t\t\t\t\tthis.setState(`${this.tabletName[Unl]}.connected`, false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.logLevel === 'debug')\n\t\t\t\tthis.log.debug(`All timers are canceled because the adapter has been switched off`);\n\t\t\tthis.setState('info.connection', false, true);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\ttry {\n\t\t\tif (state) {\n\t\t\t\t// The state was changed\n\t\t\t\tfor (const change in this.tabletName) {\n\t\t\t\t\tif (this.tabletName.hasOwnProperty(change)) {\n\t\t\t\t\t\tif (this.deviceEnabled[change] && this.tabletMqttEnabled[change]) {\n\t\t\t\t\t\t\tif (state.from === `system.adapter.${this.mqttInstance}`) {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t`state ${id} changed: ${state.val} from: ${this.namespace}`,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const change in this.tabletName) {\n\t\t\t\t\tif (this.tabletName.hasOwnProperty(change)) {\n\t\t\t\t\t\tif (this.deviceEnabled[change] && !state.ack) {\n\t\t\t\t\t\t\tfor (const i in this.commandStates) {\n\t\t\t\t\t\t\t\tif (this.commandStates.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tid ===\n\t\t\t\t\t\t\t\t\t\t`${this.namespace}.${this.tabletName[change]}.command.${this.commandStates[i]}`\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`state ${id} changed: ${state.val} from: ${this.namespace}`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tawait this.sendCommand(\n\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\tparseInt(change),\n\t\t\t\t\t\t\t\t\t\t\tthis.commandStates[i],\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// The state was deleted\n\t\t\t\tif (this.logLevel === 'debug') this.log.debug(`state ${id} deleted`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[onStateChane ${id}] error: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t */\n\tprivate async onMessage(obj: ioBroker.Message): Promise<void> {\n\t\ttry {\n\t\t\tif (typeof obj === 'object' && obj.message) {\n\t\t\t\tif (obj.command === 'add' || obj.command === 'edit') {\n\t\t\t\t\tconst deviceObj = obj.message as ioBroker.Devices;\n\n\t\t\t\t\tawait axios\n\t\t\t\t\t\t.get(`http://${deviceObj.ip}:${deviceObj.port}/api/state`, {\n\t\t\t\t\t\t\ttimeout: 15000,\n\t\t\t\t\t\t\ttimeoutErrorMessage: `Device: ${deviceObj.name} with ip: ${deviceObj.ip} takes too long to respond to the request => timeout`,\n\t\t\t\t\t\t\tsignal: this.abortController.signal,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(async (response) => {\n\t\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\t\tconst deviceOnline = {\n\t\t\t\t\t\t\t\t\tcode: 200,\n\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\tobj.command === 'edit'\n\t\t\t\t\t\t\t\t\t\t\t? `Device: ${deviceObj.name} with ip: ${deviceObj.ip} has been updated`\n\t\t\t\t\t\t\t\t\t\t\t: `Device: ${deviceObj.name} with ip: ${deviceObj.ip} has been added`,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tthis.sendTo(obj.from, obj.command, deviceOnline, obj.callback);\n\t\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\t\tthis.log.debug(`Device ${deviceObj.name} with ${deviceObj.ip} added`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconst errorMessage = { code: error.code, message: error.message };\n\t\t\t\t\t\t\tthis.sendTo(obj.from, obj.command, errorMessage, obj.callback);\n\t\t\t\t\t\t\tif (this.logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(`[ add New Device request ] error: ${error.message}`);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (obj.command === 'cancel') {\n\t\t\t\t\tif (this.abortController) this.abortController.abort();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[onMessage ${obj.command}] error: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Wallpanel(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Wallpanel())();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAMA,YAAuB;AAEvB,mBAAkB;AAClB,+BAWO;AAEP,6BAAgC;AAIhC,MAAM,iBAAiB;AACvB,MAAM,cAAc;AAGpB,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,uBAAuB;AAC7B,MAAM,kBAAkB;AACxB,MAAM,qBAAqB;AAC3B,MAAM,gBAAgB;AACtB,MAAM,cAAc;AACpB,MAAM,gBAAgB;AAEtB,MAAM,kBAAkB,MAAM,QAAQ;AAAA,EAEpB;AAAA,EACA;AAAA,EACT,iBAAwC;AAAA,EAE/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACT;AAAA,EACS;AAAA,EACT;AAAA,EACS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACS;AAAA,EACT;AAAA,EACD,YAAY,UAAyC,CAAC,GAAG;AAC/D,UAAM;AAAA,MACL,GAAG;AAAA,MACH,MAAM;AAAA,IACP,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AACpD,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAC1C,SAAK,GAAG,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AAC5C,SAAK,kBAAkB,IAAI,gBAAgB;AAC3C,SAAK,WAAW;AAChB,SAAK,KAAK,CAAC;AACX,SAAK,YAAY,CAAC;AAClB,SAAK,OAAO,CAAC;AACb,SAAK,kBAAkB,CAAC;AACxB,SAAK,aAAa,CAAC;AACnB,SAAK,aAAa,CAAC;AACnB,SAAK,UAAU,CAAC;AAChB,SAAK,aAAa,CAAC;AACnB,SAAK,aAAa,CAAC;AACnB,SAAK,gBAAgB,CAAC;AACtB,SAAK,SAAS,CAAC,SAAS;AACxB,SAAK,wBAAwB,CAAC;AAC9B,SAAK,kBAAkB,CAAC;AACxB,SAAK,iBAAiB;AACtB,SAAK,UAAU,CAAC;AAChB,SAAK,WAAW,CAAC;AACjB,SAAK,eAAe;AACpB,SAAK,oBAAoB,CAAC;AAC1B,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,gBAAgB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,SAAK,gBAAgB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAKA,MAAc,UAAyB;AAEtC,SAAK,SAAS,mBAAmB,OAAO,IAAI;AAG5C,UAAM,KAAK,eAAe;AAC1B,UAAM,KAAK,QAAQ;AAAA,EACpB;AAAA,EAEA,MAAM,iBAAgC;AACrC,QAAI;AAEH,YAAM,cAAc,MAAM,KAAK,qBAAqB,kBAAkB,KAAK,oBAAoB;AAC/F,UAAI,gBAAgB,QAAW;AAC9B,aAAK,WAAW;AAAA,MACjB,OAAO;AACN,YAAI,gBAAgB,MAAM;AACzB,eAAK,WAAW,YAAY;AAAA,QAC7B;AAAA,MACD;AAEA,UAAI,KAAK,aAAa;AAAS,aAAK,IAAI,MAAM,oCAAoC;AAGlF,WAAK,WAAW,KAAK,OAAO,WAAW;AACvC,UAAI,KAAK,WAAW,KAAO;AAC1B,aAAK,WAAW;AAAA,MACjB;AACA,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,2CAA2C,KAAK,aAAa;AAG7E,YAAM,UAAU,KAAK,OAAO;AAC5B,UACE,CAAC,WAAW,MAAM,QAAQ,OAAO,KAAK,QAAQ,cAAc,KAC5D,MAAM,QAAQ,OAAO,KAAK,QAAQ,cAAc,GAChD;AACD,mBAAW,KAAK,SAAS;AACxB,cAAI,QAAQ,eAAe,CAAC,GAAG;AAC9B,kBAAM,OAAO,QAAQ,GAAG;AACxB,iBAAK,UAAU,KAAK,QAAQ,GAAG;AAC/B,iBAAK,KAAK,KAAK,QAAQ,GAAG;AAC1B,iBAAK,cAAc,KAAK,QAAQ,GAAG;AACnC,iBAAK,gBAAgB,KAAK,OAAO;AACjC,iBAAK,cAAc,KAAK,OAAO;AAC/B,iBAAK,eAAe,KAAK,OAAO;AAChC,iBAAK,kBAAkB,KAAK,QAAQ,GAAG;AACvC,iBAAK,gBAAgB,KAAK;AAC1B,gBAAI,QAAQ,GAAG,aAAa,IAAI;AAC/B,mBAAK,SAAS,KAAK,GAAG,KAAK,gBAAgB,QAAQ,GAAG,SAAS;AAAA,gBAC9D;AAAA,gBACA;AAAA,cACD;AAAA,YACD,OAAO;AACN,mBAAK,SAAS,KAAK;AAAA,YACpB;AAEA,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,yBAAyB,SAAS,KAAK,GAAG,IAAI;AAC9D,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,2BAA2B,SAAS,KAAK,KAAK,IAAI;AAClE,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,oCAAoC,SAAS,KAAK,cAAc;AAAA,cACjE;AACD,gBAAI,KAAK,aAAa;AAAS,mBAAK,IAAI,MAAM,8BAA8B,MAAM;AAClF,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,iCAAiC,KAAK,eAAe;AACrE,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,+BAA+B,KAAK,aAAa;AACjE,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,gCAAgC,KAAK,cAAc;AACnE,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,gCAAgC,SAAS,KAAK,UAAU;AACxE,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,wCAAwC,SAAS,KAAK,kBAAkB;AAAA,cACzE;AAED,uBAAW,eAAe,KAAK,UAAU;AACxC,kBAAI,KAAK,SAAS,eAAe,WAAW,GAAG;AAC9C,oBAAI,KAAK,SAAS,iBAAiB,eAAe,KAAK,kBAAkB,IAAI;AAC5E,uBAAK;AAAA,oBACJ,GAAG,KAAK,SAAS;AAAA,kBAClB;AACA,uBAAK,uBAAuB,GAAG,KAAK,SAAS,0BAA0B;AAAA,gBACxE,OAAO;AACN,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,0CAA0C,gBAAgB,KAAK,UAAU;AAAA,oBAC1E;AAAA,gBACF;AAAA,cACD;AAAA,YACD;AAEA,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,qDAAqD,MAAM;AAC3E,iBAAK,cAAc,KAAK,KAAK,UAAU,OAAO,MAAM,KAAK,cAAc;AACvE,gBAAI,KAAK,UAAU,OAAO;AACzB,mBAAK,IAAI,KAAK,GAAG,8CAA8C;AAEhE,gBAAI,KAAK,UAAU,OAAO,UAAa,KAAK,UAAU,OAAO,IAAI;AAChE,oBAAM,UAAU;AAEhB,kBAAI,KAAK,UAAU,GAAG,MAAM,OAAO,GAAG;AAErC,qBAAK,GAAG,KAAK,KAAK,UAAU;AAAA,cAC7B,OAAO;AAEN,qBAAK,IAAI,KAAK,yBAAyB;AACvC,qBAAK,cAAc,KAAK;AAAA,cACzB;AAAA,YACD;AACA,iBAAK,WAAW,KAAK,UAAU,KAAK,GAAG,MAAM,KAAK,KAAK;AACvD,iBAAK,QAAQ,KAAK,UAAU,KAAK,GAAG,MAAM,KAAK,KAAK;AAEpD,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,8BAA8B,KAAK,WAAW,IAAI;AAClE,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,2BAA2B,KAAK,QAAQ,IAAI;AAE5D,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,yDAAyD;AAEzE,gBAAI,SAAS,IAAI;AAChB,kBAAI,KAAK,aAAa;AACrB,qBAAK,IAAI,MAAM,qDAAqD,MAAM;AAC3E,mBAAK,WAAW,KAAa,UAAM,wCAAgB,IAAI;AACvD,mBAAK,WAAW,KAAK,GAAG,KAAK,aAAa,KAAK,WAAW;AAAA,YAC3D,WAAW,KAAK,cAAc,IAAI;AACjC,kBAAI,KAAK,aAAa;AACrB,qBAAK,IAAI;AAAA,kBACR,kFAAkF,KAAK,GAAG;AAAA,gBAC3F;AACD,mBAAK,WAAW,KAAa,UAAM,wCAAgB,KAAK,GAAG,EAAE;AAAA,YAC9D;AACA,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,kCAAkC,KAAK,WAAW,IAAI;AAAA,UACvE;AAAA,QACD;AAEA,aAAK,SAAS,mBAAmB,MAAM,IAAI;AAC3C,aAAK,IAAI,KAAK,oCAAoC;AAClD,aAAK,IAAI,KAAK,6BAA6B,KAAK,OAAO,SAAS;AAAA,MACjE,OAAO;AACN,aAAK,cAAc,KAAK;AAAA,MACzB;AAAA,IACD,SAAS,OAAP;AACD,WAAK,SAAS,mBAAmB,OAAO,IAAI;AAC5C,WAAK,IAAI,MAAM,iCAAiC,MAAM,mBAAmB,MAAM,OAAO;AAAA,IACvF;AAAA,EACD;AAAA,EAEA,MAAM,UAAyB;AAC9B,QAAI;AACH,UAAI,KAAK;AAAgB,qBAAa,KAAK,cAAc;AACzD,UACE,CAAC,KAAK,cAAc,MAAM,QAAQ,KAAK,UAAU,KAAK,KAAK,WAAW,cAAc,KACpF,MAAM,QAAQ,KAAK,UAAU,KAAK,KAAK,WAAW,cAAc,GAChE;AACD,mBAAW,KAAK,KAAK,YAAY;AAChC,cAAI,KAAK,WAAW,eAAe,CAAC,GAAG;AACtC,gBAAI,KAAK,cAAc,IAAI;AAC1B,kBAAI,KAAK,aAAa;AACrB,qBAAK,IAAI,MAAM,WAAW,KAAK,WAAW,YAAY;AACvD,kBAAI,KAAK,aAAa;AAAS,qBAAK,IAAI,MAAM,yBAAyB;AAGvE,oBAAM,aAAAA,QACJ,IAAI,KAAK,WAAW,EAAE,EACtB,KAAK,OAAO,cAAmD;AAC/D,oBAAI,UAAU,cAAc,KAAK;AAChC,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,+DAA+D,KAAK;AAAA,wBACnE,UAAU;AAAA,sBACX;AAAA,oBACD;AAGD,sBACC,KAAK,eACL,KAAK,iBACL,KAAK,kBAAkB,IACtB;AACD,wBAAI,KAAK,aAAa;AACrB,2BAAK,IAAI,MAAM,2BAA2B;AAC3C,0BAAM,KAAK,YAAY,SAAS,CAAC,CAAC;AAAA,kBACnC;AAGA,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,mCAAmC,KAAK,WAAW;AAAA,oBACpD;AACD,wBAAM,KAAK,aAAa,WAAW,SAAS,CAAC,CAAC;AAG9C,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI,MAAM,yCAAyC;AACzD,wBAAM,KAAK,eAAe;AAI1B,wBAAM,KAAK,YAAY,WAAW,SAAS,CAAC,CAAC;AAG7C,wBAAM,KAAK,cAAc,GAAG,KAAK,WAAW,qBAAqB;AAAA,oBAChE,KAAK,KAAK,IAAI;AAAA,oBACd,KAAK;AAAA,kBACN,CAAC;AACD,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,wCAAwC,KAAK,IAAI;AAAA,oBAClD;AAGD,wBAAM,KAAK,cAAc,GAAG,KAAK,WAAW,gBAAgB;AAAA,oBAC3D,KAAK;AAAA,oBACL,KAAK;AAAA,kBACN,CAAC;AACD,uBAAK,gBAAgB,KAAK;AAC1B,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI,MAAM,sCAAsC;AAGtD,sBAAI,KAAK,gBAAgB;AAAI,iCAAa,KAAK,gBAAgB,EAAE;AACjE,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,uBAAuB,KAAK,WAAW;AAAA,oBACxC;AACD,uBAAK,WAAW,KAAK;AACrB,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,qBAAqB,KAAK,WAAW,UAAU,KAAK,WAAW;AAAA,oBAChE;AAAA,gBACF;AAAA,cACD,CAAC,EACA,MAAM,OAAO,UAA8B;AAC3C,oBAAI,CAAC,KAAK,WAAW,IAAI;AACxB,uBAAK,WAAW,KAAK;AACrB,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,qBAAqB,KAAK,WAAW,UAAU,KAAK,WAAW;AAAA,oBAChE;AAED,uBAAK,SAAS,GAAG,KAAK,WAAW,gBAAgB;AAAA,oBAChD,KAAK;AAAA,oBACL,KAAK;AAAA,kBACN,CAAC;AACD,uBAAK,gBAAgB,KAAK;AAC1B,uBAAK,IAAI;AAAA,oBACR,aAAa,KAAK,WAAW,yBAAyB,WAAW;AAAA,kBAClE;AAAA,gBACD,WAAW,CAAC,KAAK,gBAAgB,IAAI;AACpC,sBAAI,KAAK,gBAAgB;AAAI,iCAAa,KAAK,gBAAgB,EAAE;AACjE,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,uBAAuB,KAAK,WAAW;AAAA,oBACxC;AAED,sBAAI,KAAK,aAAa;AACrB,yBAAK,IAAI;AAAA,sBACR,2BAA2B,KAAK,WAAW,SAC1C,OAAU;AAAA,oBAEZ;AACD,uBAAK,gBAAgB,KAAK,WAAW,YAAY;AAChD,yBAAK,WAAW,KAAK;AACrB,wBAAI,KAAK,aAAa;AACrB,2BAAK,IAAI;AAAA,wBACR,qBAAqB,KAAK,WAAW,UAAU,KAAK,WAAW;AAAA,sBAChE;AAAA,kBACF,GAAG,IAAO;AAAA,gBACX;AAAA,cACD,CAAC;AAAA,YACH,OAAO;AACN,oBAAM,KAAK,eAAe;AAAA,YAC3B;AAAA,UACD;AAAA,QACD;AACA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,yBAAyB,KAAK,WAAW,SAAU;AACnE,aAAK,iBAAiB,WAAW,YAAY;AAC5C,cAAI,KAAK,aAAa;AAAS,iBAAK,IAAI,MAAM,sBAAsB;AACpE,gBAAM,KAAK,QAAQ;AAAA,QACpB,GAAG,KAAK,QAAQ;AAAA,MACjB,OAAO;AAEN,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI;AAAA,YACR;AAAA,UACD;AACD,cAAM,KAAK,eAAe;AAAA,MAC3B;AAAA,IACD,SAAS,OAAP;AACD,WAAK,IAAI,MAAM,qCAAqC,MAAM,mBAAmB,MAAM,OAAO;AAAA,IAC3F;AAAA,EACD;AAAA,EAEA,MAAM,YAAY,OAA8B;AAC/C,SAAK,UAAU,CAAC;AAEhB,eAAW,KAAK,KAAK,eAAe;AACnC,UAAI,KAAK,cAAc,eAAe,CAAC,GAAG;AACzC,YAAI,KAAK,SAAS,WAAW,aAAa;AACzC,gBAAM,YAA+C,MAAM,KAAK;AAAA,YAC/D,GAAG,KAAK,SAAS,iBAAiB,KAAK,cAAc;AAAA,UACtD;AAEA,cAAI,WAAW;AACd,gBAAI,KAAK,SAAS;AACjB,kBAAI,OAAO,UAAU,QAAQ,UAAU;AACtC,qBAAK,QAAQ,KAA6B;AAAA,kBACzC,CAAC,GAAG,KAAK,cAAc,OAAO,KAAK,MAAM,UAAU,GAAG;AAAA,gBACvD,CAAC;AAAA,cACF;AAAA,YACD;AAAA,UACD;AAAA,QACD,OAAO;AACN,cAAI,KAAK,aAAa;AACrB,iBAAK,IAAI;AAAA,cACR,kCAAkC,KAAK,WAAW,kBAAkB,KAAK,UAAU;AAAA,YACpF;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,QAAI,KAAK,aAAa;AAAS,WAAK,IAAI,MAAM,2BAA2B;AACzE,QAAI,KAAK,aAAa;AAAS,WAAK,IAAI,MAAM,oBAAoB,KAAK,UAAU,KAAK,OAAO,GAAG;AAAA,EACjG;AAAA,EAEA,MAAM,YAAY,KAAuC,OAA8B;AACtF,QAAI;AACH,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,uCAAuC,KAAK,WAAW,aAAa;AACpF,UAAI,KAAK,aAAa;AAAS,aAAK,IAAI,MAAM,uBAAuB;AACrE,UAAI,cAAc,CAAC;AACnB,iBAAW,OAAO,IAAI,MAAM;AAC3B,YAAI,IAAI,KAAK,eAAe,GAAG,GAAG;AACjC,gBAAM,KAAK,cAAc,GAAG,KAAK,WAAW,UAAU,OAAO;AAAA,YAC5D,KAAK,IAAI,KAAK;AAAA,YACd,KAAK;AAAA,UACN,CAAC;AAAA,QACF;AAAA,MACD;AACA,YAAM,KAAK,cAAc,GAAG,KAAK,WAAW,UAAU,OAAO,KAAK,WAAW,EAAE,MAAM;AAAA,QACpF,KAAK,KAAK,GAAG;AAAA,QACb,KAAK;AAAA,MACN,CAAC;AACD,YAAM,KAAK,cAAc,GAAG,KAAK,WAAW,UAAU,OAAO,KAAK,WAAW,EAAE,MAAM;AAAA,QACpF,KAAK,UAAU,KAAK,GAAG,UAAU,KAAK,KAAK;AAAA,QAC3C,KAAK;AAAA,MACN,CAAC;AAED,iBAAW,cAAc,KAAK,SAAS;AACtC,YAAI,KAAK,QAAQ,eAAe,UAAU,GAAG;AAC5C,wBAAc;AAAA,YACb,GAAG;AAAA,YACH,CAAC,GAAG,OAAO,KAAK,KAAK,QAAQ,WAAW,EAAE,OACzC,KAAK,QAAQ,YAAY,OAAO,KAAK,KAAK,QAAQ,WAAW,EAAE;AAAA,UACjE;AAAA,QACD;AAAA,MACD;AAEA,UAAI,UAAU;AAAA,QACb,CAAC,GAAG,OAAO,KAAK,WAAW,EAAE,OAAO,KAAK,IAAI;AAAA,QAC7C,CAAC,GAAG,OAAO,KAAK,WAAW,EAAE,OAAO,KAAK,GAAG;AAAA,QAC5C,CAAC,GACA,OAAO,KAAK,WAAW,EAAE,OACrB,UAAU,KAAK,GAAG,UAAU,KAAK,KAAK;AAAA,QAC3C,CAAC,GAAG,OAAO,KAAK,WAAW,EAAE,OAAO,KAAK,gBAAgB;AAAA,QACzD,GAAG,IAAI;AAAA,MACR;AACA,UAAI,KAAK,kBAAkB,QAAQ;AAClC,kBAAU;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACJ;AAAA,MACD;AACA,UAAI,KAAK,aAAa;AAAS,aAAK,IAAI,MAAM,mBAAmB,KAAK,UAAU,OAAO,GAAG;AAC1F,YAAM,KAAK,cAAc,GAAG,KAAK,WAAW,UAAU,OAAO,KAAK,WAAW,EAAE,MAAM;AAAA,QACpF,KAAK,KAAK,UAAU,OAAO;AAAA,QAC3B,KAAK;AAAA,MACN,CAAC;AAGD,UAAI,KAAK,eAAe,KAAK,iBAAiB,KAAK,kBAAkB,QAAQ;AAC5E,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,iCAAiC,KAAK,WAAW,aAAa;AAC9E,mBAAW,cAAc,KAAK,SAAS;AACtC,cAAI,KAAK,QAAQ,eAAe,UAAU,GAAG;AAC5C,uBAAW,oBAAoB,KAAK,eAAe;AAClD,kBAAI,OAAO,KAAK,KAAK,QAAQ,WAAW,EAAE,SAAS,gBAAgB,GAAG;AACrE,2BAAW,OAAO,OAAO,KAAK,KAAK,QAAQ,YAAY,iBAAiB,GAAG;AAC1E,sBACC,OAAO;AAAA,oBACN,KAAK,QAAQ,YAAY;AAAA,kBAC1B,EAAE,eAAe,GAAG,GACnB;AACD,wBACC,OAAO,KAAK,KAAK,QAAQ,YAAY,iBAAiB,EAAE,SACxD,QACC;AAED,4BAAM,YAAoB,OAAO;AAAA,wBAChC,KAAK,QAAQ,YAAY;AAAA,sBAC1B,EAAE;AAEF,4BAAM,QACL,OAAO,KAAK,KAAK,QAAQ,YAAY,iBAAiB,EACrD,SACK,UACH,OAAO,KAAK,KAAK,QAAQ,WAAW,EAAE,KACtC,OAAO,KAAK,KAAK,QAAQ,YAAY,iBAAiB,EACtD;AAGJ,4BAAM,QACL,KAAK,QAAQ,YAAY,kBAAkB;AAE5C,4BAAM,KAAK;AAAA,wBACV,GAAG,KAAK,WAAW,iBAAiB,oBAAoB;AAAA,wBACxD;AAAA,0BACC,KAAK;AAAA,0BACL,KAAK;AAAA,wBACN;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AACA,YAAI,KAAK,aAAa;AAAS,eAAK,IAAI,MAAM,0BAA0B;AAAA,MACzE;AAAA,IACD,SAAS,OAAP;AACD,WAAK,IAAI,MAAM,8BAA8B,MAAM,mBAAmB,MAAM,OAAO;AAAA,IACpF;AAAA,EACD;AAAA,EAEA,MAAM,YAAY,IAAY,OAAuB,OAAe,KAA4B;AAC/F,QAAI,QAAQ,MAAM;AAClB,YAAQ,KAAK;AAAA,MACZ,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,OAAO;AACpB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,kDAAkD,OAAO;AACzE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,YAAY,MAAM,CAAC,EAC/C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,sDAAsD,OAAO;AAAA,cAC9D;AAAA,UACF;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,2DAA2D,MAAM,mBAAmB,MAAM;AAAA,UAC3F;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,OAAO;AACpB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,gDAAgD,OAAO;AACvE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,UAAU,MAAM,CAAC,EAC7C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,oDAAoD,OAAO;AAAA,cAC5D;AAAA,UACF;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,yDAAyD,MAAM,mBAAmB,MAAM;AAAA,UACzF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,OAAO;AACpB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,8CAA8C,OAAO;AACrE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,QAAQ,MAAM,CAAC,EAC3C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,kDAAkD,OAAO;AAAA,cAC1D;AAAA,UACF;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,uDAAuD,MAAM,mBAAmB,MAAM;AAAA,UACvF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,4CAA4C,OAAO;AAEnE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,MAAM,MAAM,CAAC,EACzC,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,sBAAsB;AAC9B,2BAAa,KAAK,sBAAsB,MAAM;AAC/C,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,gDAAgD,OAAO;AAAA,cACxD;AAED,iBAAK,sBAAsB,SAAS,WAAW,YAAY;AAC1D,oBAAM,KAAK,QAAQ;AAAA,YACpB,GAAG,IAAI;AACP,kBAAM,KAAK,SAAS,IAAI,OAAO,IAAI;AAAA,UACpC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,qDAAqD,MAAM,mBAAmB,MAAM;AAAA,UACrF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,OAAO;AACpB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,gDAAgD,OAAO;AACvE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,QAAQ,MAAM,CAAC,EAC3C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,kDAAkD,OAAO;AAAA,cAC1D;AAAA,UACF;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,uDAAuD,MAAM,mBAAmB,MAAM;AAAA,UACvF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,MAAM;AACnB,cAAI,SAAS,GAAG;AACf,oBAAQ;AAAA,UACT,WAAW,SAAS,KAAK;AACxB,oBAAQ;AAAA,UACT,OAAO;AACN,oBAAQ,MAAM;AAAA,UACf;AAAA,QACD,OAAO;AACN,kBAAQ;AACR,cAAI,SAAS,GAAG;AACf,oBAAQ;AAAA,UACT,WAAW,SAAS,KAAK;AACxB,oBAAQ;AAAA,UACT,OAAO;AACN,oBAAQ,MAAM;AAAA,UACf;AAAA,QACD;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,kDAAkD,OAAO;AACzE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,YAAY,MAAM,CAAC,EAE/C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,sBAAsB;AAC9B,2BAAa,KAAK,sBAAsB,MAAM;AAC/C,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,sDAAsD,OAAO;AAAA,cAC9D;AAED,iBAAK,sBAAsB,SAAS,WAAW,YAAY;AAC1D,oBAAM,KAAK,QAAQ;AAAA,YACpB,GAAG,IAAI;AACP,kBAAM,KAAK,cAAc,IAAI,OAAO,IAAI;AAAA,UACzC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,2DAA2D,MAAM,mBAAmB,MAAM;AAAA,UAC3F;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,MAAM;AACnB,cAAI,SAAS,KAAK;AACjB,oBAAQ;AAAA,UACT,WAAW,SAAS,GAAG;AACtB,oBAAQ;AAAA,UACT,OAAO;AACN,oBAAQ,MAAM;AAAA,UACf;AAAA,QACD,OAAO;AACN,kBAAQ;AACR,cAAI,SAAS,KAAK;AACjB,oBAAQ;AAAA,UACT,WAAW,SAAS,GAAG;AACtB,oBAAQ;AAAA,UACT,OAAO;AACN,oBAAQ,MAAM;AAAA,UACf;AAAA,QACD;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,8CAA8C,OAAO;AACrE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,QAAQ,MAAM,CAAC,EAC3C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,kDAAkD,OAAO;AAAA,cAC1D;AACD,kBAAM,KAAK,cAAc,IAAI,OAAO,IAAI;AAAA,UACzC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,uDAAuD,MAAM,mBAAmB,MAAM;AAAA,UACvF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,GAAG;AAChB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,2CAA2C,OAAO;AAClE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,KAAK,MAAM,CAAC,EACxC,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,+CAA+C,OAAO;AAAA,cACvD;AACD,kBAAM,KAAK,cAAc,IAAI,IAAI,IAAI;AAAA,UACtC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,oDAAoD,MAAM,mBAAmB,MAAM;AAAA,UACpF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,GAAG;AAChB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,gDAAgD,OAAO;AACvE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,OAAO,MAAM,CAAC,EAC1C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,oDAAoD,OAAO;AAAA,cAC5D;AACD,kBAAM,KAAK,cAAc,IAAI,IAAI,IAAI;AAAA,UACtC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,yDAAyD,MAAM,mBAAmB,MAAM;AAAA,UACzF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,GAAG;AAChB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,6CAA6C,OAAO;AAEpE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,OAAO,MAAM,CAAC,EAC1C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,iDAAiD,OAAO;AAAA,cACzD;AACD,kBAAM,KAAK,cAAc,IAAI,IAAI,IAAI;AAAA,UACtC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,sDAAsD,MAAM,mBAAmB,MAAM;AAAA,UACtF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc;AAC1B,YAAI,UAAU,GAAG;AAChB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,4CAA4C,OAAO;AAEnE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,MAAM,MAAM,CAAC,EACzC,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,gDAAgD,OAAO;AAAA,cACxD;AACD,kBAAM,KAAK,cAAc,IAAI,IAAI,IAAI;AAAA,UACtC;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,qDAAqD,MAAM,mBAAmB,MAAM;AAAA,UACrF;AAAA,QACD,CAAC;AACF;AAAA,MAED,KAAK,GAAG,KAAK,cAAc,OAAO;AACjC,YAAI,UAAU,OAAO;AACpB,kBAAQ;AAAA,QACT,OAAO;AACN,kBAAQ,MAAM;AAAA,QACf;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,IAAI,MAAM,kDAAkD,OAAO;AACzE,cAAM,aAAAA,QACJ,KAAK,KAAK,QAAQ,QAAQ,EAAE,UAAU,MAAM,CAAC,EAC7C,KAAK,OAAO,WAAW;AACvB,cAAI,OAAO,cAAc,KAAK;AAC7B,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,sDAAsD,OAAO;AAAA,cAC9D;AAAA,UACF;AAAA,QACD,CAAC,EACA,MAAM,OAAO,UAAU;AACvB,eAAK,IAAI;AAAA,YACR,2DAA2D,MAAM,mBAAmB,MAAM;AAAA,UAC3F;AAAA,QACD,CAAC;AACF;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,aAAa,KAA2B,OAA8B;AAC3E,QAAI;AACH,UAAI,KAAK,aAAa;AAAS,aAAK,IAAI,MAAM,qCAAqC;AACnF,YAAM,oBAA2B,CAAC;AAClC,YAAM,gBAAgB,OAAO,KAAK,IAAI,OAAO;AAC7C,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,2CAA2C,eAAe;AAE1E,iBAAW,KAAK,eAAe;AAC9B,YAAI,cAAc,eAAe,CAAC,GAAG;AACpC,4BAAkB,KAAK,OAAO,OAAO,OAAO,IAAI,OAAO,EAAE;AAAA,QAC1D;AAAA,MACD;AACA,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,2CAA2C,mBAAmB;AAC9E,UAAI,KAAK,aAAa;AAAS,aAAK,IAAI,MAAM,6CAA6C;AAC3F,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,iEAAiE;AAGjF,YAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,UAAU;AAAA,QAC/D,MAAM;AAAA,QACN,QAAQ;AAAA,UACP,MAAM,GAAG,KAAK,OAAO,QAAQ,OAAO;AAAA,QACrC;AAAA,QACA,QAAQ,CAAC;AAAA,MACV,CAAC;AAGD,iBAAW,KAAK,KAAK,QAAQ;AAC5B,YAAI,KAAK,OAAO,eAAe,CAAC,GAAG;AAClC,gBAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,UAAU,KAAK,OAAO,MAAM;AAAA,YACjF,MAAM;AAAA,YACN,QAAQ;AAAA,cACP,MAAM,GAAG,KAAK,OAAO;AAAA,YACtB;AAAA,YACA,QAAQ,CAAC;AAAA,UACV,CAAC;AAAA,QACF;AAAA,MACD;AAGA,iBAAW,OAAO,gBAAgB;AACjC,YAAI,eAAe,eAAe,GAAG,GAAG;AACvC,gBAAM,KAAK;AAAA,YACV,GAAG,KAAK,WAAW,kBAAkB;AAAA,YACrC,eAAe;AAAA,UAChB;AACA,eAAK,gBAAgB,GAAG,KAAK,WAAW,kBAAkB,KAAK;AAE/D,cAAI,UAAU;AACd,oBAAU,MAAM,KAAK,eAAe,GAAG,KAAK,WAAW,kBAAkB,KAAK;AAC9E,cAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,uBAAW,CAAC,UAAU,QAAQ,KAAK,OAAO,QAAQ,QAAQ,SAAS,GAAG;AACrE,kBAAI,eAAe,KAAK,OAAO,cAAc,UAAU;AACtD,sBAAM,SAAS,eAAe,KAAK;AACnC,sBAAM,KAAK,kBAAkB,GAAG,KAAK,WAAW,kBAAkB,OAAO;AAAA,kBACxE,MAAM;AAAA,kBACN;AAAA,gBACD,CAAC;AACD,qBAAK,IAAI;AAAA,kBACR,aAAa,QAAQ;AAAA,gBACtB;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAGA,iBAAW,OAAO,aAAa;AAC9B,YAAI,YAAY,eAAe,GAAG,GAAG;AACpC,gBAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,UAAU,OAAO,YAAY,IAAI;AACvF,cAAI,UAAU;AACd,oBAAU,MAAM,KAAK,eAAe,GAAG,KAAK,WAAW,UAAU,KAAK;AACtE,cAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,uBAAW,CAAC,UAAU,QAAQ,KAAK,OAAO,QAAQ,QAAQ,SAAS,GAAG;AACrE,kBAAI,YAAY,KAAK,OAAO,cAAc,UAAU;AACnD,sBAAM,SAAS,YAAY,KAAK;AAChC,sBAAM,KAAK,kBAAkB,GAAG,KAAK,WAAW,UAAU,OAAO;AAAA,kBAChE,MAAM;AAAA,kBACN;AAAA,gBACD,CAAC;AACD,qBAAK,IAAI;AAAA,kBACR,aAAa,QAAQ;AAAA,gBACtB;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAGA,UAAI,KAAK,eAAe,KAAK,eAAe;AAC3C,YAAI,KAAK,SAAS,WAAW,eAAe,KAAK,QAAQ,WAAW,GAAG;AAEtE,gBAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,iBAAiB;AAAA,YACtE,MAAM;AAAA,YACN,QAAQ;AAAA,cACP,MAAM;AAAA,YACP;AAAA,YACA,QAAQ,CAAC;AAAA,UACV,CAAC;AAGD,qBAAW,cAAc,KAAK,SAAS;AACtC,gBAAI,KAAK,QAAQ,eAAe,UAAU,GAAG;AAC5C,oBAAM,MAAM,OAAO,KAAK,KAAK,QAAQ,WAAW;AAEhD,kBAAI,IAAI,OAAO,WAAW;AACzB,sBAAM,KAAK;AAAA,kBACV,GAAG,KAAK,WAAW;AAAA,kBACnB;AAAA,oBACC,MAAM;AAAA,oBACN,QAAQ;AAAA,sBACP,MAAM;AAAA,oBACP;AAAA,oBACA,QAAQ,CAAC;AAAA,kBACV;AAAA,gBACD;AAEA,2BAAW,OAAO,gBAAgB;AACjC,sBAAI,eAAe,eAAe,GAAG,GAAG;AACvC,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,yBAAyB;AAAA,sBAC5C,eAAe;AAAA,oBAChB;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,yBAAyB;AAAA,oBAC7C;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,eAAe,KAAK,OAAO,cAAc,UAAU;AACtD,gCAAM,SAAS,eAAe,KAAK;AACnC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,yBAAyB;AAAA,4BAC5C;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,SAAS;AAC9B,sBAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,uBAAuB;AAAA,kBAC5E,MAAM;AAAA,kBACN,QAAQ;AAAA,oBACP,MAAM;AAAA,kBACP;AAAA,kBACA,QAAQ,CAAC;AAAA,gBACV,CAAC;AAED,2BAAW,OAAO,cAAc;AAC/B,sBAAI,aAAa,eAAe,GAAG,GAAG;AACrC,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,uBAAuB;AAAA,sBAC1C,aAAa;AAAA,oBACd;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,uBAAuB;AAAA,oBAC3C;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,aAAa,KAAK,OAAO,cAAc,UAAU;AACpD,gCAAM,SAAS,aAAa,KAAK;AACjC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,uBAAuB;AAAA,4BAC1C;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,iBAAiB;AACtC,sBAAM,KAAK;AAAA,kBACV,GAAG,KAAK,WAAW;AAAA,kBACnB;AAAA,oBACC,MAAM;AAAA,oBACN,QAAQ;AAAA,sBACP,MAAM;AAAA,oBACP;AAAA,oBACA,QAAQ,CAAC;AAAA,kBACV;AAAA,gBACD;AAEA,2BAAW,OAAO,sBAAsB;AACvC,sBAAI,qBAAqB,eAAe,GAAG,GAAG;AAC7C,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,+BAA+B;AAAA,sBAClD,qBAAqB;AAAA,oBACtB;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,+BAA+B;AAAA,oBACnD;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,qBAAqB,KAAK,OAAO,cAAc,UAAU;AAC5D,gCAAM,SAAS,qBAAqB,KAAK;AACzC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,+BAA+B;AAAA,4BAClD;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,YAAY;AACjC,sBAAM,KAAK;AAAA,kBACV,GAAG,KAAK,WAAW;AAAA,kBACnB;AAAA,oBACC,MAAM;AAAA,oBACN,QAAQ;AAAA,sBACP,MAAM;AAAA,oBACP;AAAA,oBACA,QAAQ,CAAC;AAAA,kBACV;AAAA,gBACD;AAEA,2BAAW,OAAO,iBAAiB;AAClC,sBAAI,gBAAgB,eAAe,GAAG,GAAG;AACxC,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,0BAA0B;AAAA,sBAC7C,gBAAgB;AAAA,oBACjB;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,0BAA0B;AAAA,oBAC9C;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,gBAAgB,KAAK,OAAO,cAAc,UAAU;AACvD,gCAAM,SAAS,gBAAgB,KAAK;AACpC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,0BAA0B;AAAA,4BAC7C;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,eAAe;AACpC,sBAAM,KAAK;AAAA,kBACV,GAAG,KAAK,WAAW;AAAA,kBACnB;AAAA,oBACC,MAAM;AAAA,oBACN,QAAQ;AAAA,sBACP,MAAM;AAAA,oBACP;AAAA,oBACA,QAAQ,CAAC;AAAA,kBACV;AAAA,gBACD;AAEA,2BAAW,OAAO,oBAAoB;AACrC,sBAAI,mBAAmB,eAAe,GAAG,GAAG;AAC3C,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,6BAA6B;AAAA,sBAChD,mBAAmB;AAAA,oBACpB;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,6BAA6B;AAAA,oBACjD;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,mBAAmB,KAAK,OAAO,cAAc,UAAU;AAC1D,gCAAM,SAAS,mBAAmB,KAAK;AACvC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,6BAA6B;AAAA,4BAChD;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,UAAU;AAC/B,sBAAM,KAAK;AAAA,kBACV,GAAG,KAAK,WAAW;AAAA,kBACnB;AAAA,oBACC,MAAM;AAAA,oBACN,QAAQ;AAAA,sBACP,MAAM;AAAA,oBACP;AAAA,oBACA,QAAQ,CAAC;AAAA,kBACV;AAAA,gBACD;AAEA,2BAAW,OAAO,eAAe;AAChC,sBAAI,cAAc,eAAe,GAAG,GAAG;AACtC,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,wBAAwB;AAAA,sBAC3C,cAAc;AAAA,oBACf;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,wBAAwB;AAAA,oBAC5C;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,cAAc,KAAK,OAAO,cAAc,UAAU;AACrD,gCAAM,SAAS,cAAc,KAAK;AAClC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,wBAAwB;AAAA,4BAC3C;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,QAAQ;AAC7B,sBAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,sBAAsB;AAAA,kBAC3E,MAAM;AAAA,kBACN,QAAQ;AAAA,oBACP,MAAM;AAAA,kBACP;AAAA,kBACA,QAAQ,CAAC;AAAA,gBACV,CAAC;AAED,2BAAW,OAAO,aAAa;AAC9B,sBAAI,YAAY,eAAe,GAAG,GAAG;AACpC,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,sBAAsB;AAAA,sBACzC,YAAY;AAAA,oBACb;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,sBAAsB;AAAA,oBAC1C;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,YAAY,KAAK,OAAO,cAAc,UAAU;AACnD,gCAAM,SAAS,YAAY,KAAK;AAChC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,sBAAsB;AAAA,4BACzC;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD,WAAW,IAAI,OAAO,UAAU;AAC/B,sBAAM,KAAK;AAAA,kBACV,GAAG,KAAK,WAAW;AAAA,kBACnB;AAAA,oBACC,MAAM;AAAA,oBACN,QAAQ;AAAA,sBACP,MAAM;AAAA,oBACP;AAAA,oBACA,QAAQ,CAAC;AAAA,kBACV;AAAA,gBACD;AAEA,2BAAW,OAAO,eAAe;AAChC,sBAAI,cAAc,eAAe,GAAG,GAAG;AACtC,0BAAM,KAAK;AAAA,sBACV,GAAG,KAAK,WAAW,wBAAwB;AAAA,sBAC3C,cAAc;AAAA,oBACf;AAEA,wBAAI,UAAU;AACd,8BAAU,MAAM,KAAK;AAAA,sBACpB,GAAG,KAAK,WAAW,wBAAwB;AAAA,oBAC5C;AACA,wBAAI,YAAY,QAAQ,YAAY,QAAW;AAC9C,iCAAW,CAAC,UAAU,QAAQ,KAAK,OAAO;AAAA,wBACzC,QAAQ;AAAA,sBACT,GAAG;AACF,4BAAI,cAAc,KAAK,OAAO,cAAc,UAAU;AACrD,gCAAM,SAAS,cAAc,KAAK;AAClC,gCAAM,KAAK;AAAA,4BACV,GAAG,KAAK,WAAW,wBAAwB;AAAA,4BAC3C;AAAA,8BACC,MAAM;AAAA,8BACN;AAAA,4BACD;AAAA,0BACD;AACA,+BAAK,IAAI;AAAA,4BACR,aAAa,QAAQ;AAAA,0BACtB;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAGA,iBAAW,KAAK,eAAe;AAC9B,YAAI,cAAc,eAAe,CAAC,GAAG;AACpC,gBAAM,KAAK,wBAAwB,GAAG,KAAK,WAAW,UAAU,cAAc,MAAM;AAAA,YACnF,MAAM;AAAA,YACN,QAAQ;AAAA,cACP,MAAM,GAAG,cAAc;AAAA,cACvB,MAAM,kBAAkB;AAAA,cACxB,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA,QAAQ,CAAC;AAAA,UACV,CAAC;AAAA,QACF;AAAA,MACD;AACA,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,oDAAoD,KAAK,WAAW,QAAQ;AAC5F,UAAI,KAAK,aAAa;AAAS,aAAK,IAAI,MAAM,8BAA8B;AAAA,IAC7E,SAAS,OAAP;AACD,WAAK,IAAI,MAAM,8BAA8B,MAAM,mBAAmB,MAAM,OAAO;AAAA,IACpF;AAAA,EACD;AAAA,EAMA,MAAc,iBAAgC;AAC7C,QAAI;AACH,YAAM,iBAA2B,CAAC;AAClC,YAAM,wBAAwB,MAAM,KAAK,uBAAuB;AAChE,iBAAW,4BAA4B,uBAAuB;AAC7D,YAAI,sBAAsB,eAAe,wBAAwB,GAAG;AACnE,cAAI,sBAAsB,0BAA0B,SAAS,UAAU;AACtE,2BAAe,KAAK,sBAAsB,0BAA0B,GAAG;AAAA,UACxE;AAAA,QACD;AAAA,MACD;AACA,UAAI,eAAe,WAAW,GAAG;AAChC,YAAI,KAAK,aAAa;AAAS,eAAK,IAAI,MAAM,6BAA6B;AAC3E;AAAA,MACD;AAEA,YAAM,WAAqB,CAAC;AAC5B,iBAAW,gBAAgB,gBAAgB;AAC1C,YAAI,eAAe,eAAe,YAAY,GAAG;AAChD,cAAI,KAAK,WAAW,KAAK,CAAC,YAAoB,YAAY,eAAe,aAAa,GAAG;AACxF,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI;AAAA,gBACR,4BAA4B,eAAe;AAAA,cAC5C;AAAA,UACF,OAAO;AACN,qBAAS,KAAK,eAAe,aAAa;AAAA,UAC3C;AAAA,QACD;AAAA,MACD;AAEA,iBAAW,eAAe,UAAU;AACnC,YAAI,SAAS,eAAe,WAAW,GAAG;AACzC,cAAI,KAAK,aAAa;AACrB,iBAAK,IAAI,MAAM,kCAAkC,SAAS,cAAc;AACzE,gBAAM,KAAK,eAAe,SAAS,cAAc,EAAE,WAAW,KAAK,CAAC;AAAA,QACrE;AAAA,MACD;AACA,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,gEAAgE;AAAA,IACjF,SAAS,OAAP;AACD,WAAK,IAAI,MAAM,iCAAiC,MAAM,mBAAmB,MAAM,OAAO;AAAA,IACvF;AAAA,EACD;AAAA,EAKQ,SAAS,UAA4B;AAC5C,QAAI;AAEH,UAAI,KAAK;AAAgB,qBAAa,KAAK,cAAc;AACzD,iBAAW,OAAO,KAAK,YAAY;AAClC,YAAI,KAAK,WAAW,eAAe,GAAG,GAAG;AACxC,cAAI,KAAK,gBAAgB;AAAM,yBAAa,KAAK,gBAAgB,IAAI;AACrE,cAAI,KAAK,sBAAsB;AAAM,yBAAa,KAAK,sBAAsB,IAAI;AACjF,cAAI,KAAK,cAAc;AACtB,iBAAK,SAAS,GAAG,KAAK,WAAW,kBAAkB,OAAO,IAAI;AAAA,QAChE;AAAA,MACD;AACA,UAAI,KAAK,aAAa;AACrB,aAAK,IAAI,MAAM,mEAAmE;AACnF,WAAK,SAAS,mBAAmB,OAAO,IAAI;AAE5C,eAAS;AAAA,IACV,SAAS,GAAP;AACD,eAAS;AAAA,IACV;AAAA,EACD;AAAA,EAKA,MAAc,cAAc,IAAY,OAAyD;AAChG,QAAI;AACH,UAAI,OAAO;AAEV,mBAAW,UAAU,KAAK,YAAY;AACrC,cAAI,KAAK,WAAW,eAAe,MAAM,GAAG;AAC3C,gBAAI,KAAK,cAAc,WAAW,KAAK,kBAAkB,SAAS;AACjE,kBAAI,MAAM,SAAS,kBAAkB,KAAK,gBAAgB;AACzD,sBAAM,KAAK,QAAQ;AACnB,oBAAI,KAAK,aAAa;AACrB,uBAAK,IAAI;AAAA,oBACR,SAAS,eAAe,MAAM,aAAa,KAAK;AAAA,kBACjD;AACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,mBAAW,UAAU,KAAK,YAAY;AACrC,cAAI,KAAK,WAAW,eAAe,MAAM,GAAG;AAC3C,gBAAI,KAAK,cAAc,WAAW,CAAC,MAAM,KAAK;AAC7C,yBAAW,KAAK,KAAK,eAAe;AACnC,oBAAI,KAAK,cAAc,eAAe,CAAC,GAAG;AACzC,sBACC,OACA,GAAG,KAAK,aAAa,KAAK,WAAW,mBAAmB,KAAK,cAAc,MAC1E;AACD,wBAAI,KAAK,aAAa;AACrB,2BAAK,IAAI;AAAA,wBACR,SAAS,eAAe,MAAM,aAAa,KAAK;AAAA,sBACjD;AACD,0BAAM,KAAK;AAAA,sBACV;AAAA,sBACA;AAAA,sBACA,SAAS,MAAM;AAAA,sBACf,KAAK,cAAc;AAAA,oBACpB;AACA;AAAA,kBACD;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,OAAO;AAEN,YAAI,KAAK,aAAa;AAAS,eAAK,IAAI,MAAM,SAAS,YAAY;AAAA,MACpE;AAAA,IACD,SAAS,OAAP;AACD,WAAK,IAAI,MAAM,iBAAiB,cAAc,MAAM,mBAAmB,MAAM,OAAO;AAAA,IACrF;AAAA,EACD;AAAA,EAOA,MAAc,UAAU,KAAsC;AAC7D,QAAI;AACH,UAAI,OAAO,QAAQ,YAAY,IAAI,SAAS;AAC3C,YAAI,IAAI,YAAY,SAAS,IAAI,YAAY,QAAQ;AACpD,gBAAM,YAAY,IAAI;AAEtB,gBAAM,aAAAA,QACJ,IAAI,UAAU,UAAU,MAAM,UAAU,kBAAkB;AAAA,YAC1D,SAAS;AAAA,YACT,qBAAqB,WAAW,UAAU,iBAAiB,UAAU;AAAA,YACrE,QAAQ,KAAK,gBAAgB;AAAA,UAC9B,CAAC,EACA,KAAK,OAAO,aAAa;AACzB,gBAAI,SAAS,WAAW,KAAK;AAC5B,oBAAM,eAAe;AAAA,gBACpB,MAAM;AAAA,gBACN,SACC,IAAI,YAAY,SACb,WAAW,UAAU,iBAAiB,UAAU,wBAChD,WAAW,UAAU,iBAAiB,UAAU;AAAA,cACrD;AAEA,mBAAK,OAAO,IAAI,MAAM,IAAI,SAAS,cAAc,IAAI,QAAQ;AAC7D,kBAAI,KAAK,aAAa;AACrB,qBAAK,IAAI,MAAM,UAAU,UAAU,aAAa,UAAU,UAAU;AAAA,YACtE;AAAA,UACD,CAAC,EACA,MAAM,CAAC,UAAU;AACjB,kBAAM,eAAe,EAAE,MAAM,MAAM,MAAM,SAAS,MAAM,QAAQ;AAChE,iBAAK,OAAO,IAAI,MAAM,IAAI,SAAS,cAAc,IAAI,QAAQ;AAC7D,gBAAI,KAAK,aAAa;AACrB,mBAAK,IAAI,MAAM,qCAAqC,MAAM,SAAS;AAAA,UACrE,CAAC;AAAA,QACH;AACA,YAAI,IAAI,YAAY,UAAU;AAC7B,cAAI,KAAK;AAAiB,iBAAK,gBAAgB,MAAM;AAAA,QACtD;AAAA,MACD;AAAA,IACD,SAAS,OAAP;AACD,WAAK,IAAI,MAAM,cAAc,IAAI,mBAAmB,MAAM,mBAAmB,MAAM,OAAO;AAAA,IAC3F;AAAA,EACD;AACD;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAE5B,SAAO,UAAU,CAAC,YAAuD,IAAI,UAAU,OAAO;AAC/F,OAAO;AAEN,GAAC,MAAM,IAAI,UAAU,GAAG;AACzB;",
  "names": ["axios"]
}
