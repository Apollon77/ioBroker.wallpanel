{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.0.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\n// Load your modules here, e.g.:\nimport axios from 'axios';\nimport {\n\tobject_command_definitions,\n\tobject_info_definitions,\n\tobject_mqttBattery_definitions,\n\tobject_mqttFace_definitions,\n\tobject_mqttLight_definitions,\n\tobject_mqttMagneticField_definitions,\n\tobject_mqttMotion_definitions,\n\tobject_mqttPressure_definitions,\n\tobject_mqttQrcode_definitions,\n\tobject_mqttTemperature_definitions,\n} from './lib/object_definition';\n\nimport { replaceFunktion } from './lib/replaceFunktion';\n\n// Global variables here\n//rest API Obj\nconst commandObjects = object_command_definitions;\nconst infoObjects = object_info_definitions;\n\n//MQTT Obj\nconst batteryObjects = object_mqttBattery_definitions;\nconst lightObjects = object_mqttLight_definitions;\nconst magneticFieldObjects = object_mqttMagneticField_definitions;\nconst pressureObjects = object_mqttPressure_definitions;\nconst temperatureObjects = object_mqttTemperature_definitions;\nconst motionObjects = object_mqttMotion_definitions;\nconst faceObjects = object_mqttFace_definitions;\nconst qrcodeObjects = object_mqttQrcode_definitions;\n\nlet logLevel: ioBroker.StateValue = 'info';\nlet requestTimeout: NodeJS.Timeout | null = null;\nlet abortController: AbortController | null = null;\nlet interval = 30;\nlet mqttInstalled = false;\nlet mqttEnabled = false;\nconst tabletMqttEnabled: boolean[] = [];\nlet mqttInstance: string | null = null;\nconst mqttPath: string[] = [];\nlet mqttObj: { [key: string]: any }[] = [];\nconst mqttAttribute = [\n\t'battery',\n\t'light',\n\t'motion',\n\t'face',\n\t'qrcode',\n\t'magneticField',\n\t'pressure',\n\t'temperature',\n];\nconst ip: string[] = [];\nconst device_ip: string[] = [];\nconst port: number[] = [];\nconst connectionState: boolean[] = [];\nconst tabletName: string[] = [];\nconst requestUrl: string[] = [];\nconst sendUrl: string[] = [];\nconst logMessage: boolean[] = [];\nconst deviceEnabled: boolean[] = [];\nconst logMessageTimer: NodeJS.Timeout[] = [];\nconst folder: string[] = [`command`];\nconst commandRequestTimeout: NodeJS.Timeout[] = [];\nconst commandStates: string[] = [\n\t`clearCache`,\n\t`relaunch`,\n\t`reload`,\n\t`wake`,\n\t`camera`,\n\t`brightness`,\n\t`volume`,\n\t`url`,\n\t`urlAudio`,\n\t`speak`,\n\t`eval`,\n\t'settings',\n];\n//const tabletDeviceId: string[] = [];\nconst adapterIDs: string[] = [];\nclass Wallpanel extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'wallpanel',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t\tthis.on('message', this.onMessage.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Reset the connection indicator during startup\n\t\tthis.setState('info.connection', false, true);\n\n\t\t// Initialize your adapter here\n\t\tawait this.initialization();\n\t\tawait this.request();\n\t}\n\n\tasync initialization(): Promise<void> {\n\t\ttry {\n\t\t\t// Check if the log output from the adapter is in debug mode.\n\t\t\tconst logLevelObj = await this.getForeignStateAsync(`system.adapter.${this.namespace}.logLevel`);\n\t\t\tif (logLevelObj === undefined) {\n\t\t\t\tlogLevel = 'info';\n\t\t\t} else {\n\t\t\t\tif (logLevelObj !== null) {\n\t\t\t\t\tlogLevel = logLevelObj.val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (logLevel === 'debug') this.log.debug(`prepare adapter for initialization`);\n\t\t\t// polling min 10 sec.\n\t\t\tinterval = this.config.interval * 1000;\n\t\t\tif (interval < 10000) {\n\t\t\t\tinterval = 10000;\n\t\t\t}\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Adapter config for interval readout --> ${interval} ms`);\n\n\t\t\t// ip and port\n\t\t\tconst devices = this.config.devices;\n\t\t\tif (\n\t\t\t\t(!devices && Array.isArray(devices) && devices['length'] !== 0) ||\n\t\t\t\t(Array.isArray(devices) && devices['length'] !== 0)\n\t\t\t) {\n\t\t\t\tfor (const i in devices) {\n\t\t\t\t\tconst name = devices[i]['name'];\n\t\t\t\t\tdevice_ip[i] = devices[i]['ip'];\n\t\t\t\t\tport[i] = devices[i]['port'];\n\t\t\t\t\tdeviceEnabled[i] = devices[i]['enabled'];\n\t\t\t\t\tmqttInstalled = this.config.mqttInstalled;\n\t\t\t\t\tmqttEnabled = this.config.enabledMqtt;\n\t\t\t\t\tmqttInstance = this.config.mqttInstance;\n\t\t\t\t\ttabletMqttEnabled[i] = devices[i]['mqttEnabled'];\n\t\t\t\t\tconnectionState[i] = false;\n\t\t\t\t\tif (devices[i]['topic'] !== '') {\n\t\t\t\t\t\tmqttPath[i] = `${mqttInstance}.${devices[i]['topic'].replace('/', '.')}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmqttPath[i] = 'undefined';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization Ip for ${name}: ${ip[i]}`);\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization port for ${name}: ${port[i]}`);\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`initialization deviceEnabled for ${name}: ${deviceEnabled[i]}`);\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization tabletName: ${name}`);\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`initialization mqttInstalled: ${mqttInstalled}`);\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization mqttEnabled: ${mqttEnabled}`);\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization mqttInstance: ${mqttInstance}`);\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`initialization mqttPaths for ${name}: ${mqttPath}`);\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t`initialization tabletMqttEnabled for ${name}: ${tabletMqttEnabled[i]}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tfor (const mqttPathKey in mqttPath) {\n\t\t\t\t\t\tif (mqttPath[mqttPathKey] !== 'undefined' && tabletMqttEnabled[i]) {\n\t\t\t\t\t\t\tthis.subscribeForeignStates(`${mqttPath[mqttPathKey]}.sensor.motion`);\n\t\t\t\t\t\t\tthis.subscribeForeignStates(`${mqttPath[mqttPathKey]}.sensor.face`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[ mqttSubscribeMotion ] mqtt Topic for ${name} with ip ${device_ip[i]} is not set`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`Check whether the IP address is available for the ${name}`);\n\t\t\t\t\tdeviceEnabled[i] = device_ip[i] !== '' && deviceEnabled[i];\n\t\t\t\t\tif (device_ip[i] === '') this.log.warn(`${name} has no ip address device is not queried`);\n\n\t\t\t\t\tif (device_ip[i] !== undefined || device_ip[i] !== '') {\n\t\t\t\t\t\tconst ipRegex = /^(?:(?:25[0-5]|2[0-4]\\d|1?\\d?\\d)(?:\\.(?!$)|$)){4}$/; //regex from https://regex101.com/library/ChFXjy\n\n\t\t\t\t\t\tif (device_ip[i].match(ipRegex)) {\n\t\t\t\t\t\t\t// valid\n\t\t\t\t\t\t\tip[i] = device_ip[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// invalid\n\t\t\t\t\t\t\tthis.log.warn('No Permitted Ip Address');\n\t\t\t\t\t\t\tdeviceEnabled[i] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trequestUrl[i] = `http://${ip[i]}:${port[i]}/api/state`;\n\t\t\t\t\tsendUrl[i] = `http://${ip[i]}:${port[i]}/api/command`;\n\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization requestUrl: ${requestUrl[i]}`);\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`initialization sendUrl: ${sendUrl[i]}`);\n\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`it is checked whether the name of the device is entered`);\n\t\t\t\t\t// Prepare tablet name\n\t\t\t\t\tif (name !== '') {\n\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(`the name of the device is entered and is used --> ${name}`);\n\t\t\t\t\t\ttabletName[i] = <string>await replaceFunktion(name);\n\t\t\t\t\t\tadapterIDs[i] = `${this.namespace}.${tabletName[i]}`;\n\t\t\t\t\t} else if (deviceEnabled[i]) {\n\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t`The name of the device is not entered; the IP address is used for the name --> ${ip[i]}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\ttabletName[i] = <string>await replaceFunktion(ip[i]);\n\t\t\t\t\t}\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(`Tablet name is being prepared: ${tabletName[i]}`);\n\t\t\t\t}\n\n\t\t\t\tthis.setState('info.connection', true, true);\n\t\t\t\tthis.log.info(`Adapter has been fully initialized`);\n\t\t\t} else {\n\t\t\t\tdeviceEnabled[1] = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState('info.connection', false, true);\n\t\t\tthis.log.error(`initialization has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync request(): Promise<void> {\n\t\ttry {\n\t\t\tif (requestTimeout) clearTimeout(requestTimeout);\n\t\t\tif (\n\t\t\t\t(!requestUrl && Array.isArray(requestUrl) && requestUrl['length'] !== 0) ||\n\t\t\t\t(Array.isArray(requestUrl) && requestUrl['length'] !== 0)\n\t\t\t) {\n\t\t\t\tfor (const i in requestUrl) {\n\t\t\t\t\tif (deviceEnabled[i]) {\n\t\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`device: ${tabletName[i]} enabled`);\n\t\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`API request started ...`);\n\n\t\t\t\t\t\t// Try to reach API and receive data\n\t\t\t\t\t\tawait axios\n\t\t\t\t\t\t\t.get(requestUrl[i])\n\t\t\t\t\t\t\t.then(async (apiResult: { [x: string]: any }): Promise<void> => {\n\t\t\t\t\t\t\t\tif (apiResult['status'] === 200) {\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`API request ended successfully --> result from api Request: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tapiResult['data'],\n\t\t\t\t\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t// check if mqtt is turned on and installed, if yes then mqtt data request\n\t\t\t\t\t\t\t\t\tif (mqttEnabled && mqttInstalled && tabletMqttEnabled[i]) {\n\t\t\t\t\t\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`requesting data from mqtt`);\n\t\t\t\t\t\t\t\t\t\tawait this.mqttRequest(parseInt(i));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// create an object with the data from the API request and all required objects\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`State Create is now running for ${tabletName[i]} ...`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tawait this.create_State(apiResult, parseInt(i));\n\n\t\t\t\t\t\t\t\t\t// check if all objects are still needed and delete them if necessary\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(`checking whether all objects are needed`);\n\t\t\t\t\t\t\t\t\tawait this.deleteFunction();\n\n\t\t\t\t\t\t\t\t\t// write the data into the created states\n\n\t\t\t\t\t\t\t\t\tawait this.state_write(apiResult, parseInt(i));\n\n\t\t\t\t\t\t\t\t\t// set the last request time\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[i]}.lastInfoUpdate`, {\n\t\t\t\t\t\t\t\t\t\tval: Date.now(),\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(`The last update of the state was on: ${Date.now()}`);\n\n\t\t\t\t\t\t\t\t\t// set the connection state to true\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(`${tabletName[i]}.connected`, {\n\t\t\t\t\t\t\t\t\t\tval: true,\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconnectionState[i] = true;\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(`The connection state was set to true`);\n\n\t\t\t\t\t\t\t\t\t// clear log message timer\n\t\t\t\t\t\t\t\t\tif (logMessageTimer[i]) clearTimeout(logMessageTimer[i]);\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`logMessageTimer for ${tabletName[i]} will be deleted`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlogMessage[i] = false;\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`logMessage set to ${logMessage[i]} for ${tabletName[i]}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(async (error: any): Promise<void> => {\n\t\t\t\t\t\t\t\tif (!logMessage[i]) {\n\t\t\t\t\t\t\t\t\tlogMessage[i] = true;\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`logMessage set to ${logMessage[i]} for ${tabletName[i]}`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t// set connection state to false\n\t\t\t\t\t\t\t\t\tthis.setState(`${tabletName[i]}.connected`, {\n\t\t\t\t\t\t\t\t\t\tval: false,\n\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconnectionState[i] = false;\n\t\t\t\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t\t\t\t`[Request] ${tabletName[i]} Unable to contact: ${error} | ${error}`,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else if (!logMessageTimer[i]) {\n\t\t\t\t\t\t\t\t\tif (logMessageTimer[i]) clearTimeout(logMessageTimer[i]);\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`logMessageTimer for ${tabletName[i]} will be deleted`,\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t`set logMessageTimer for ${tabletName[i]} to ${\n\t\t\t\t\t\t\t\t\t\t\t\t3600000 / 60000\n\t\t\t\t\t\t\t\t\t\t\t} min`,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlogMessageTimer[i] = setTimeout(async () => {\n\t\t\t\t\t\t\t\t\t\tlogMessage[i] = false;\n\t\t\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t\t\t`logMessage set to ${logMessage[i]} for ${tabletName[i]}`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}, 3600000);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.deleteFunction();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (logLevel === 'debug') this.log.debug(`set requestTimeout to ${interval / 1000} sec`);\n\t\t\t\trequestTimeout = setTimeout(async () => {\n\t\t\t\t\tif (logLevel === 'debug') this.log.debug(`request is restarted`);\n\t\t\t\t\tawait this.request();\n\t\t\t\t}, interval);\n\t\t\t} else {\n\t\t\t\t// start the delete function if no tablets are configured\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t`no tablets are configured --> delete function will be started for all objects`,\n\t\t\t\t\t);\n\t\t\t\tawait this.deleteFunction();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[Request function] has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync mqttRequest(index: number): Promise<void> {\n\t\tmqttObj = [];\n\n\t\tfor (const i in mqttAttribute) {\n\t\t\tif (mqttPath[index] !== 'undefined') {\n\t\t\t\tconst mqttState: ioBroker.State | null | undefined = await this.getForeignStateAsync(\n\t\t\t\t\t`${mqttPath[index]}.sensor.${mqttAttribute[i]}`,\n\t\t\t\t);\n\n\t\t\t\tif (mqttState) {\n\t\t\t\t\tif (mqttObj) {\n\t\t\t\t\t\tif (typeof mqttState.val === 'string') {\n\t\t\t\t\t\t\tmqttObj.push(<{ [key: string]: any }>{\n\t\t\t\t\t\t\t\t[`${mqttAttribute[i]}`]: JSON.parse(mqttState.val),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t`[ mqttRequest ] mqtt Topic for ${tabletName[index]} with ip ${device_ip[index]} is not set`,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (logLevel === 'debug') this.log.debug(`MQTT states were obtained`);\n\t\tif (logLevel === 'debug') this.log.debug(`MQTT states are: ${JSON.stringify(mqttObj)}`);\n\t}\n\n\tasync state_write(res: { [x: string]: any; data?: any }, index: number): Promise<void> {\n\t\ttry {\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Preparation for the state write for ${tabletName[index]} ....`);\n\t\t\tif (logLevel === 'debug') this.log.debug(`stats are written now`);\n\t\t\tlet mqttJsonObj = {};\n\t\t\tfor (const Key in res.data) {\n\t\t\t\tawait this.setStateAsync(`${tabletName[index]}.${Key}`, {\n\t\t\t\t\tval: res.data[Key],\n\t\t\t\t\tack: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\tawait this.setStateAsync(`${tabletName[index]}.${Object.keys(infoObjects)[1]}`, {\n\t\t\t\tval: ip[index],\n\t\t\t\tack: true,\n\t\t\t});\n\t\t\tawait this.setStateAsync(`${tabletName[index]}.${Object.keys(infoObjects)[2]}`, {\n\t\t\t\tval: `http://${ip[index]}:${port[index]}/camera/stream`,\n\t\t\t\tack: true,\n\t\t\t});\n\n\t\t\tfor (const mqttObjKey in mqttObj) {\n\t\t\t\tmqttJsonObj = {\n\t\t\t\t\t...mqttJsonObj,\n\t\t\t\t\t[`${Object.keys(mqttObj[mqttObjKey])[0]}`]:\n\t\t\t\t\t\tmqttObj[mqttObjKey][Object.keys(mqttObj[mqttObjKey])[0]],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlet jsonObj = {\n\t\t\t\t[`${Object.keys(infoObjects)[0]}`]: Date.now(),\n\t\t\t\t[`${Object.keys(infoObjects)[1]}`]: ip[index],\n\t\t\t\t[`${Object.keys(infoObjects)[2]}`]: `http://${ip[index]}:${port[index]}/camera/stream`,\n\t\t\t\t[`${Object.keys(infoObjects)[3]}`]: connectionState[index],\n\t\t\t\t...res.data,\n\t\t\t};\n\t\t\tif (tabletMqttEnabled[index]) {\n\t\t\t\tjsonObj = {\n\t\t\t\t\t...jsonObj,\n\t\t\t\t\t...mqttJsonObj,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (logLevel === 'debug') this.log.debug(`JSON object is: ${JSON.stringify(jsonObj)}`);\n\t\t\tawait this.setStateAsync(`${tabletName[index]}.${Object.keys(infoObjects)[4]}`, {\n\t\t\t\tval: JSON.stringify(jsonObj),\n\t\t\t\tack: true,\n\t\t\t});\n\n\t\t\t// Check if mqtt is installed and switched on in the Config\n\t\t\tif (mqttEnabled && mqttInstalled && tabletMqttEnabled[index]) {\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`MQTT state is written now for ${tabletName[index]} ....`);\n\t\t\t\tfor (const mqttObjKey in mqttObj) {\n\t\t\t\t\tfor (const mqttAttributeKey of mqttAttribute) {\n\t\t\t\t\t\tif (Object.keys(mqttObj[mqttObjKey]).includes(mqttAttributeKey)) {\n\t\t\t\t\t\t\tfor (const key in Object.keys(mqttObj[mqttObjKey][mqttAttributeKey])) {\n\t\t\t\t\t\t\t\tif (Object.keys(mqttObj[mqttObjKey][mqttAttributeKey])[key] !== 'unit') {\n\t\t\t\t\t\t\t\t\t// extract on the object the attributes\n\t\t\t\t\t\t\t\t\tconst attribute: string = Object.keys(\n\t\t\t\t\t\t\t\t\t\tmqttObj[mqttObjKey][mqttAttributeKey],\n\t\t\t\t\t\t\t\t\t)[key];\n\t\t\t\t\t\t\t\t\t// create a state name from the attributes\n\t\t\t\t\t\t\t\t\tconst state: string =\n\t\t\t\t\t\t\t\t\t\tObject.keys(mqttObj[mqttObjKey][mqttAttributeKey])[key] === 'value'\n\t\t\t\t\t\t\t\t\t\t\t? Object.keys(mqttObj[mqttObjKey])[0]\n\t\t\t\t\t\t\t\t\t\t\t: Object.keys(mqttObj[mqttObjKey][mqttAttributeKey])[key];\n\t\t\t\t\t\t\t\t\t// extract on the object the value\n\t\t\t\t\t\t\t\t\tconst value = mqttObj[mqttObjKey][mqttAttributeKey][attribute];\n\n\t\t\t\t\t\t\t\t\tawait this.setStateAsync(\n\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.${mqttAttributeKey}.${state}`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tval: value,\n\t\t\t\t\t\t\t\t\t\t\tack: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (logLevel === 'debug') this.log.debug(`MQTT states were written`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`state_write has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tasync sendCommand(id: string, state: ioBroker.State, index: number, cmd: string): Promise<void> {\n\t\tlet value = state.val;\n\t\tswitch (cmd) {\n\t\t\tcase `${commandStates[0]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [clearCache] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { clearCache: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[clearCache] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [clearCache] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[1]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [relaunch] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { relaunch: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[relaunch] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [relaunch] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[2]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [reload] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { reload: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[reload] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [reload] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[3]}`:\n\t\t\t\tif (logLevel === 'debug') this.log.debug(`command [wake] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { wake: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (commandRequestTimeout[index]) clearTimeout(commandRequestTimeout[index]);\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[wake] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tcommandRequestTimeout[index] = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\tawait this.setState(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [wake] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[4]}`:\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [ camera ] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { camera: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[camera] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [camera] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[5]}`:\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tif (value <= 0) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t} else if (value >= 255) {\n\t\t\t\t\t\tvalue = 255;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t\tif (value <= 0) {\n\t\t\t\t\t\tvalue = 1;\n\t\t\t\t\t} else if (value >= 255) {\n\t\t\t\t\t\tvalue = 255;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [brightness] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { brightness: value })\n\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (commandRequestTimeout[index]) clearTimeout(commandRequestTimeout[index]);\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[brightness] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tcommandRequestTimeout[index] = setTimeout(async () => {\n\t\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [brightness] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[6]}`:\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tif (value >= 100) {\n\t\t\t\t\t\tvalue = 100;\n\t\t\t\t\t} else if (value <= 0) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue = 100;\n\t\t\t\t\tif (value >= 100) {\n\t\t\t\t\t\tvalue = 100;\n\t\t\t\t\t} else if (value <= 0) {\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = state.val;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [volume] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { volume: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[volume] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, value, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [volume] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[7]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug') this.log.debug(`command [url] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { url: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[url] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [url] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[8]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [urlAudio] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { audio: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[urlAudio] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [urlAudio] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[9]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [speak] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { speak: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[speak] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [speak] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[10]}`:\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug') this.log.debug(`command [eval] is being sent with value: ${value}`);\n\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { eval: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[eval] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.setStateAsync(id, '', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [eval] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase `${commandStates[11]}`: {\n\t\t\t\tif (value === false) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = state.val;\n\t\t\t\t}\n\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`command [ settings ] is being sent with value: ${value}`);\n\t\t\t\tawait axios\n\t\t\t\t\t.post(sendUrl[index], { settings: value })\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result['status'] === 200) {\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t`[ settings ] command was sent successfully Status: ${result['statusText']}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(async (error) => {\n\t\t\t\t\t\tthis.log.error(\n\t\t\t\t\t\t\t`sendCommand has a problem sending [ settings ] command: ${error.message}, stack: ${error.stack}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync create_State(res: { [x: string]: any }, index: number): Promise<void> {\n\t\ttry {\n\t\t\tif (logLevel === 'debug') this.log.debug(`preparation for the statesCreate...`);\n\t\t\tconst requestStatesType: any[] = [];\n\t\t\tconst requestStates = Object.keys(res['data']);\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Read the state name from the apiResult: ${requestStates}`);\n\n\t\t\tfor (const t in requestStates) {\n\t\t\t\trequestStatesType[t] = typeof Object.values(res['data'])[t];\n\t\t\t}\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Read the state Type from the apiResult: ${requestStatesType}`);\n\t\t\tif (logLevel === 'debug') this.log.debug(`Start the stateCreate for the requestStates`);\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`Start the stateCreate for the commandStates and subscribeStates`);\n\n\t\t\t// create device folder\n\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}`, {\n\t\t\t\ttype: 'device',\n\t\t\t\tcommon: {\n\t\t\t\t\tname: `${this.config.devices[index].name}`,\n\t\t\t\t},\n\t\t\t\tnative: {},\n\t\t\t});\n\n\t\t\t// create channel folder\n\t\t\tfor (const f in folder) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.${folder[f]}`, {\n\t\t\t\t\ttype: 'channel',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `${folder[f]}`,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// create commandStates\n\t\t\tfor (const obj in commandObjects) {\n\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t`${tabletName[index]}.command.${obj}`,\n\t\t\t\t\tcommandObjects[obj],\n\t\t\t\t);\n\t\t\t\tthis.subscribeStates(`${tabletName[index]}.command.${obj}`);\n\n\t\t\t\tlet Objects = null;\n\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.command.${obj}`);\n\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\tif (commandObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\tconst common = commandObjects[obj].common;\n\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.command.${obj}`, {\n\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create infoStates\n\t\t\tfor (const obj in infoObjects) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.${obj}`, infoObjects[obj]);\n\t\t\t\tlet Objects = null;\n\t\t\t\tObjects = await this.getObjectAsync(`${tabletName[index]}.${obj}`);\n\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\tif (infoObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\tconst common = infoObjects[obj].common;\n\t\t\t\t\t\t\tawait this.extendObjectAsync(`${tabletName[index]}.${obj}`, {\n\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check if the mqtt is enabled\n\t\t\tif (mqttEnabled && mqttInstalled) {\n\t\t\t\tif (mqttPath[index] !== 'undefined' && mqttObj.length !== 0) {\n\t\t\t\t\t// create mqttChannels\n\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor`, {\n\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\tname: `Sensor values`,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnative: {},\n\t\t\t\t\t});\n\n\t\t\t\t\t// create all mqttStates\n\t\t\t\t\tfor (const mqttObjKey in mqttObj) {\n\t\t\t\t\t\tconst Obj = Object.keys(mqttObj[mqttObjKey]);\n\n\t\t\t\t\t\tif (Obj[0] === 'battery') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.battery`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `battery Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in batteryObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.battery.${obj}`,\n\t\t\t\t\t\t\t\t\tbatteryObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.battery.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (batteryObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = batteryObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.battery.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'light') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.light`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `light Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const key in lightObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.light.${key}`,\n\t\t\t\t\t\t\t\t\tlightObjects[key],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.light.${key}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (lightObjects[key].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = lightObjects[key].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.light.${key}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'magneticField') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.magneticField`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `magneticField Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in magneticFieldObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.magneticField.${obj}`,\n\t\t\t\t\t\t\t\t\tmagneticFieldObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.magneticField.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (magneticFieldObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = magneticFieldObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.magneticField.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'pressure') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.pressure`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `pressure Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in pressureObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.pressure.${obj}`,\n\t\t\t\t\t\t\t\t\tpressureObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.pressure.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (pressureObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = pressureObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.pressure.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'temperature') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.temperature`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `temperature Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in temperatureObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.temperature.${obj}`,\n\t\t\t\t\t\t\t\t\ttemperatureObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.temperature.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (temperatureObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = temperatureObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.temperature.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'motion') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.motion`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `motion Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in motionObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.motion.${obj}`,\n\t\t\t\t\t\t\t\t\tmotionObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.motion.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (motionObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = motionObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.motion.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'face') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.face`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `face Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in faceObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.face.${obj}`,\n\t\t\t\t\t\t\t\t\tfaceObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.face.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (faceObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = faceObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.face.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Obj[0] === 'qrcode') {\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.sensor.qrcode`, {\n\t\t\t\t\t\t\t\ttype: 'channel',\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: `qrcode Sensor`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const obj in qrcodeObjects) {\n\t\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.qrcode.${obj}`,\n\t\t\t\t\t\t\t\t\tqrcodeObjects[obj],\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tlet Objects = null;\n\t\t\t\t\t\t\t\tObjects = await this.getObjectAsync(\n\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.qrcode.${obj}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (Objects !== null && Objects !== undefined) {\n\t\t\t\t\t\t\t\t\tfor (const [valueKey, KeyValue] of Object.entries(Objects[`common`])) {\n\t\t\t\t\t\t\t\t\t\tif (qrcodeObjects[obj].common[valueKey] !== KeyValue) {\n\t\t\t\t\t\t\t\t\t\t\tconst common = qrcodeObjects[obj].common;\n\t\t\t\t\t\t\t\t\t\t\tawait this.extendObjectAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t`${tabletName[index]}.sensor.qrcode.${obj}`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'state',\n\t\t\t\t\t\t\t\t\t\t\t\t\tcommon,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.log.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`the state ${Objects._id} has a wrong object structure and was adapted to the new one`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create requestState\n\t\t\tfor (const r in requestStates) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`${tabletName[index]}.${requestStates[r]}`, {\n\t\t\t\t\ttype: 'state',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: `${requestStates[r]}`,\n\t\t\t\t\t\ttype: requestStatesType[r],\n\t\t\t\t\t\trole: `state`,\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`subscribe to all stats in the command folder for ${tabletName[index]}`);\n\t\t\tif (logLevel === 'debug') this.log.debug(`State Create was carried out`);\n\t\t} catch (error) {\n\t\t\tthis.log.error(`stateCreate has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Delete all Device Objects that are no longer configured in the tablet list.\n\t * @returns {Promise<void>}\n\t */\n\tprivate async deleteFunction(): Promise<void> {\n\t\ttry {\n\t\t\tconst tabletDeviceId: string[] = [];\n\t\t\tconst currentAdapterObjects = await this.getAdapterObjectsAsync();\n\t\t\tfor (const currentAdapterObjectsKey in currentAdapterObjects) {\n\t\t\t\tif (currentAdapterObjects[currentAdapterObjectsKey].type === 'device') {\n\t\t\t\t\ttabletDeviceId.push(currentAdapterObjects[currentAdapterObjectsKey]._id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tabletDeviceId.length === 0) {\n\t\t\t\tif (logLevel === 'debug') this.log.debug('no tablets found in adapter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst deleteId: string[] = [];\n\t\t\tfor (const currentIDKey in tabletDeviceId) {\n\t\t\t\tif (adapterIDs.find((element: string) => element === tabletDeviceId[currentIDKey])) {\n\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t`The device with the name ${tabletDeviceId[currentIDKey]} is already registered`,\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdeleteId.push(tabletDeviceId[currentIDKey]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const deleteIdKey in deleteId) {\n\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\tthis.log.debug(`delete the device with the ID: ${deleteId[deleteIdKey]}`);\n\t\t\t\tawait this.delObjectAsync(deleteId[deleteIdKey], { recursive: true });\n\t\t\t}\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug('all tablet objects that are no longer needed have been deleted');\n\t\t} catch (error) {\n\t\t\tthis.log.error(`deleteFunction has a problem: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tif (requestTimeout) clearTimeout(requestTimeout);\n\t\t\tfor (const Unl in tabletName) {\n\t\t\t\tif (logMessageTimer[Unl]) clearTimeout(logMessageTimer[Unl]);\n\t\t\t\tif (commandRequestTimeout[Unl]) clearTimeout(commandRequestTimeout[Unl]);\n\t\t\t\tif (deviceEnabled[Unl]) this.setState(`${tabletName[Unl]}.connected`, false, true);\n\t\t\t}\n\t\t\tif (logLevel === 'debug')\n\t\t\t\tthis.log.debug(`All timers are canceled because the adapter has been switched off`);\n\t\t\tthis.setState('info.connection', false, true);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n\t\ttry {\n\t\t\tif (state) {\n\t\t\t\t// The state was changed\n\t\t\t\tfor (const change in tabletName) {\n\t\t\t\t\tif (deviceEnabled[change] && tabletMqttEnabled[change]) {\n\t\t\t\t\t\tif (state.from === `system.adapter.${mqttInstance}`) {\n\t\t\t\t\t\t\tawait this.request();\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(`state ${id} changed: ${state.val} from: ${this.namespace}`);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const change in tabletName) {\n\t\t\t\t\tif (deviceEnabled[change] && !state.ack) {\n\t\t\t\t\t\tfor (const i in commandStates) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tid === `${this.namespace}.${tabletName[change]}.command.${commandStates[i]}`\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\tthis.log.debug(\n\t\t\t\t\t\t\t\t\t\t`state ${id} changed: ${state.val} from: ${this.namespace}`,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tawait this.sendCommand(id, state, parseInt(change), commandStates[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// The state was deleted\n\t\t\t\tif (logLevel === 'debug') this.log.debug(`state ${id} deleted`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[onStateChane ${id}] error: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t */\n\tprivate async onMessage(obj: ioBroker.Message): Promise<void> {\n\t\ttry {\n\t\t\tif (typeof obj === 'object' && obj.message) {\n\t\t\t\tif (obj.command === 'add' || obj.command === 'edit') {\n\t\t\t\t\tconst deviceObj = obj.message as ioBroker.Devices;\n\t\t\t\t\tabortController = new AbortController();\n\t\t\t\t\tawait axios\n\t\t\t\t\t\t.get(`http://${deviceObj.ip}:${deviceObj.port}/api/state`, {\n\t\t\t\t\t\t\ttimeout: 15000,\n\t\t\t\t\t\t\ttimeoutErrorMessage: `Device: ${deviceObj.name} with ip: ${deviceObj.ip} takes too long to respond to the request => timeout`,\n\t\t\t\t\t\t\tsignal: abortController.signal,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(async (response) => {\n\t\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\t\tconst deviceOnline = {\n\t\t\t\t\t\t\t\t\tcode: 200,\n\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\tobj.command === 'edit'\n\t\t\t\t\t\t\t\t\t\t\t? `Device: ${deviceObj.name} with ip: ${deviceObj.ip} has been updated`\n\t\t\t\t\t\t\t\t\t\t\t: `Device: ${deviceObj.name} with ip: ${deviceObj.ip} has been added`,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tthis.sendTo(obj.from, obj.command, deviceOnline, obj.callback);\n\t\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\t\tthis.log.debug(`Device ${deviceObj.name} with ${deviceObj.ip} added`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconst errorMessage = { code: error.code, message: error.message };\n\t\t\t\t\t\t\tthis.sendTo(obj.from, obj.command, errorMessage, obj.callback);\n\t\t\t\t\t\t\tif (logLevel === 'debug')\n\t\t\t\t\t\t\t\tthis.log.debug(`[ add New Device request ] error: ${error.message}`);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (obj.command === 'cancel') {\n\t\t\t\t\tif (abortController) abortController.abort();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`[onMessage ${obj.command}] error: ${error.message}, stack: ${error.stack}`);\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Wallpanel(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Wallpanel())();\n}\n"],
  "mappings": "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",
  "names": []
}
